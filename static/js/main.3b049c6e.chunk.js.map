{"version":3,"sources":["assets/images/EmpireStateBuilding.png","assets/images/Temple.png","assets/images/Colosseum.png","assets/images/Cube_10x10x10.png","assets/images/Playground.png","assets/images/StarTrek.png","components/styled-components.js","components/format-number.js","components/Robot.js","components/Gauge.js","components/tweet.js","components/Console.js","components/Paraview.js","components/RobotDashboard.js","components/OrbitControls.js","components/Block.js","components/BlockSimulation.js","components/HomeBlockDashboard.js","components/App.js","serviceWorker.js","index.js","components/charts-theme.js","assets/images/user-img-placeholder.jpeg","assets/images/TajMahal.png"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Nav","nav","_templateObject2","formatNum","num","i","si","value","symbol","length","toFixed","replace","Component","charts","fusioncharts","Gauge","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","battery_life","setState","props","battery","console","log","dataSource","chart","caption","lowerlimit","upperlimit","showvalue","numbersuffix","theme","showtooltip","showGaugeBorder","showHoverEffect","colorrange","color","minvalue","maxvalue","code","dials","dial","trendpoints","point","startValue","endValue","radius","innerRadius","displayValue","alpha","react_default","a","createElement","ReactFC_default","type","width","height","dataFormat","containerBackgroundOpacity","React","TweetBox","className","children","Image","src","image","alt","Handle","handle","Name","name","Tweet","tweet","TweetBody","tweet_TweetBox","tweet_Image","tweet_Name","tweet_Handle","tweet_Tweet","Console","users","handleRefresh","bind","assertThisInitialized","getUser","_this2","Promise","resolve","_this3","fetch","then","response","ok","json","Error","data","results","email","concat","toConsumableArray","catch","error","pullDownContent","releaseContent","refreshContent","pullDownThreshold","onRefresh","triggerHeight","backgroundColor","map","user","index","tweet_TweetBody","key","Paraview","divRenderer","document","getElementById","style","position","overflow","smartConnect","SmartConnect","newInstance","config","sessionURL","onConnectionReady","connection","pvwClient","ParaViewWebClient","createClient","renderer","RemoteRenderer","setContainer","onImageReady","window","SizeHelper","onSizeChange","resize","startListening","connect","react","id","ReactFC","fcRoot","FusionCharts","Charts","Maps","USARegion","Widgets","Column2D","Pusher","logToConsole","channel","cluster","forceTLS","subscribe","RobotDashboard","getData","arg","totalRevenue","arr","items","arrLen","amRevenue","ebRevenue","etRevenue","productViews","purchaseRate","checkoutRate","abandonedRate","ordersTrendStore","ordersTrendRegion","orderesTrendnw","orderesTrendsw","orderesTrendc","orderesTrendne","orderesTrendse","parseInt","revenue","push","label","orders","product_views","purchase_rate","checkout_rate","abandoned_rate","orders_nw","orders_sw","orders_c","orders_ne","orders_se","updateDashboard","event","selectedValue","check_alive_status","connection_status","selectBehavior","input","select_behavior","classList","add","last_behavior_id","remove","dropdownOptions","angles","gripper_status","blocks_placed","a_link_blocks","d_link_blocks","robot_state","end_effector_velocity","behavior_times","grippers","alive","setInterval","behavior","parent","robot_id","clearInterval","d","velocity","splice","flat","Infinity","Gauge_Gauge","defaultCenterLabel","paletteColors","minHeight","dataEmptyMessage","subCaption","es","labels","datasets","pointLabelFontColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","maintainAspectRatio","scale","gridLines","pointLabels","fontColor","xAxisName","yAxisName","lineThickness","index_es","lineWidth","lineColor","lineBorderRadius","src_components_Console","Paraview_Paraview","OrbitControls","object","domElement","undefined","warn","enabled","target","Vector3","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","addScaledVector","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownDolly","addEventListener","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","tabIndex","prototype","create","EventDispatcher","constructor","MapControls","VoxelWorld","cellSize","cellSliceSize","cell","Uint8Array","z","voxelX","THREE","euclideanModulo","cellX","floor","cellY","cellZ","getCellForVoxel","computeVoxelOffset","positions","normals","indices","startX","startY","startZ","voxelY","voxelZ","getVoxel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","faces","Symbol","iterator","next","done","_ref2","dir","corners","ndx","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","pos","apply","err","return","HomeBlockDashboard","getImageSource","require","robot_count","dimensions","blocks_to_place","blueprint_id","App","showDashboard","display","RobotDashboard_RobotDashboard","HomeBlockDashboard_HomeBlockDashboard","changeDashboard","showDropdown","dist_default","onChange","placeholder","new_dropdown_options","Set","class","onClick","Boolean","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister","register","base","bgAlpha","canvasBgAlpha","baseFont","baseFontSize","baseFontBold","chartBottomMargin","chartTopMargin","chartLeftMargin","chartRightMargin","canvasBottomMargin","canvasTopMargin","canvasRightMargin","canvasLeftMargin","showBorder","showCanvasBorder","baseFontColor","captionFontBold","captionFontSize","subCaptionFontSize","tooltipColor","tooltipBgColor","tooltipBgAlpha","tooltipPadding","toolTipBorderAlpha","toolTipBorderRadius","showValues","legendBgAlpha","legendBorderAlpha","legendBorderThickness","bar2d","placeValuesInside","usePlotGradientColor","showAlternateVGridColor","divLineAlpha","divLineColor","captionFontColor","valuePadding","yAxisNameAlpha","yAxisNameFontSize","yAxisNamePadding","valueFontBold","valueFontSize","plotToolText","captionAlignment","captionPadding","doughnut2d","showLabels","use3DLighting","showPlotBorder","pieRadius","doughnutRadius","showTooltip","enableRotation","enableSlicing","startingAngle","geo","legendScaleLineThickness","legendaxisborderalpha","legendShadow","plotFillAlpha","borderThickness","nullEntityColor","nullEntityAlpha","entityFillHoverColor","entityToolText"],"mappings":"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","file":"static/js/main.3b049c6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EmpireStateBuilding.ee291595.png\";","module.exports = __webpack_public_path__ + \"static/media/Temple.ad1cdf65.png\";","module.exports = __webpack_public_path__ + \"static/media/Colosseum.3613bb08.png\";","module.exports = __webpack_public_path__ + \"static/media/Cube_10x10x10.4a4a0900.png\";","module.exports = __webpack_public_path__ + \"static/media/Playground.5aa80335.png\";","module.exports = __webpack_public_path__ + \"static/media/StarTrek.69a2c58f.png\";","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Nav = styled.nav``;","export default function formatNum(num) {\n  let si = [\n    { value: 1, symbol: \"\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"m\" },\n    { value: 1e9, symbol: \"g\" },\n    { value: 1e12, symbol: \"t\" },\n    { value: 1e15, symbol: \"p\" },\n    { value: 1e18, symbol: \"e\" }\n  ];\n  let rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let i;\n  for (i = si.length - 1; i > 0; i--) {\n    if (num >= si[i].value) {\n      break;\n    }\n  }\n  return (num / si[i].value).toFixed(2).replace(rx, \"$1\") + si[i].symbol;\n}\n","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport * as dat from \"dat.gui\";\n\nexport default class Robot extends Component {\n  display_robot() {\n    var scene = new THREE.Scene();\n    var robot_div = document.getElementById(\"robot\");\n    // Camera\n    var aspect =\n      robot_div.parentNode.clientWidth / robot_div.parentNode.clientHeight;\n    var camera = new THREE.PerspectiveCamera(60, aspect, 0.1, 1000);\n    camera.position.z = 5;\n    camera.position.x = 5;\n    camera.position.y = 5;\n    camera.lookAt(0, 1.5, 0);\n    camera.updateProjectionMatrix();\n    // var controls = new THREE.OrbitControls( camera );\n\n    // Renderer\n    var renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(\n      robot_div.parentNode.clientWidth,\n      robot_div.parentNode.clientHeight\n    );\n    robot_div.appendChild(renderer.domElement);\n\n    // Model:\n    var material = new THREE.MeshStandardMaterial();\n\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var base = new THREE.Mesh(geometry, material);\n    scene.add(base);\n\n    var shoulder = new THREE.Object3D();\n    shoulder.translateY(0.5);\n    base.add(shoulder);\n\n    geometry = new THREE.BoxGeometry(0.5, 2, 0.5);\n    var lowerArm = new THREE.Mesh(geometry, material);\n    lowerArm.translateY(1);\n    shoulder.add(lowerArm);\n\n    var elbow = new THREE.Object3D();\n    elbow.translateY(1);\n    lowerArm.add(elbow);\n\n    geometry = new THREE.BoxGeometry(0.5, 2, 0.5);\n    var upperArm = new THREE.Mesh(geometry, material);\n    upperArm.translateY(1);\n    elbow.add(upperArm);\n\n    var secondElbow = new THREE.Object3D();\n    secondElbow.translateY(1);\n    upperArm.add(secondElbow);\n\n    geometry = new THREE.BoxGeometry(0.5, 2, 0.5);\n    var otherArm = new THREE.Mesh(geometry, material);\n    otherArm.translateY(1);\n    secondElbow.add(otherArm);\n\n    var newArm = new THREE.Object3D();\n    newArm.translateY(2);\n    secondElbow.add(newArm);\n\n    geometry = new THREE.BoxGeometry(0.5, 2, 0.5);\n    var newLink = new THREE.Mesh(geometry, material);\n    newLink.translateY(1);\n    newArm.add(newLink);\n\n    var otherBase = new THREE.Object3D();\n    otherBase.translateY(1);\n    newLink.add(otherBase);\n\n    geometry = new THREE.BoxGeometry(1, 1, 1);\n    var newBase = new THREE.Mesh(geometry, material);\n    newBase.translateY(0.5);\n    otherBase.add(newBase);\n\n    // Light\n    var light = new THREE.DirectionalLight(0xffffff, 1.0);\n    light.position.set(10, 5, 10);\n    light.target = base;\n    scene.add(light);\n\n    light = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(light);\n\n    // Options (DAT.GUI)\n    var options = {\n      base: 0,\n      shoulder: 0,\n      elbow: -44,\n      secondElbow: -56,\n      newArm: -68\n    };\n    // DAT.GUI Related Stuff\n    var gui = new dat.GUI({ autoPlace: false });\n    gui.add(options, \"base\", -180, 180).listen();\n    // gui.add(options, 'shoulder', -180, 180).listen();\n    gui.add(options, \"elbow\", -180, 180).listen();\n    gui.add(options, \"secondElbow\", -180, 180).listen();\n    gui.add(options, \"newArm\", -180, 180).listen();\n\n    // Rendering\n    var zAxis = new THREE.Vector3(0, 0, 1);\n    var yAxis = new THREE.Vector3(0, 1, 0);\n\n    robot_div.appendChild(gui.domElement);\n    var show = function() {\n      requestAnimationFrame(show);\n\n      // Rotate joints\n      base.setRotationFromAxisAngle(yAxis, (options.base * Math.PI) / 180);\n      // shoulder.setRotationFromAxisAngle(zAxis, options.shoulder * Math.PI / 180);\n      elbow.setRotationFromAxisAngle(zAxis, (options.elbow * Math.PI) / 180);\n      secondElbow.setRotationFromAxisAngle(\n        zAxis,\n        (options.secondElbow * Math.PI) / 180\n      );\n      newArm.setRotationFromAxisAngle(zAxis, (options.newArm * Math.PI) / 180);\n\n      // Render\n      renderer.render(scene, camera);\n    };\n\n    // console.log(render.domElement);\n    // return ;\n    show();\n  }\n  componentDidMount() {\n    this.display_robot();\n  }\n  render() {\n    return <div id=\"robot\"></div>;\n  }\n}\n","import fusioncharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport React, { Component } from \"react\";\n\n// Resolves charts dependancy\ncharts(fusioncharts);\n\nexport default class Gauge extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      battery_life: 50\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      battery_life: this.props.battery\n    });\n  }\n  render() {\n    const battery_life = this.props.battery;\n    console.log(\"Battery life: \", this.props.battery);\n    var dataSource = {\n      chart: {\n        caption: \"Battery Life\",\n        lowerlimit: \"0\",\n        upperlimit: \"100\",\n        showvalue: \"1\",\n        numbersuffix: \"%\",\n        theme: \"ecommerce\",\n        showtooltip: \"1\",\n        showGaugeBorder: \"0\",\n        showHoverEffect: \"1\"\n      },\n      colorrange: {\n        color: [\n          {\n            minvalue: \"0\",\n            maxvalue: \"50\",\n            code: \"#F2726F\"\n          },\n          {\n            minvalue: \"50\",\n            maxvalue: \"75\",\n            code: \"#FFC533\"\n          },\n          {\n            minvalue: \"75\",\n            maxvalue: \"100\",\n            code: \"#62B58F\"\n          }\n        ]\n      },\n      dials: {\n        dial: [\n          {\n            value: battery_life\n          }\n        ]\n      },\n      trendpoints: {\n        point: [\n          {\n            startValue: \"60\",\n            endValue: \"100\",\n            radius: \"100\",\n            innerRadius: \"5\",\n            displayValue: \"Safe\",\n            color: \"#0075c2\",\n            alpha: \"40\"\n          }\n        ]\n      }\n    };\n\n    console.log(dataSource);\n    return (\n      <ReactFC\n        type=\"angulargauge\"\n        width=\"100%\"\n        height=\"100%\"\n        dataFormat=\"json\"\n        containerBackgroundOpacity=\"0\"\n        dataSource={dataSource}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nconst TweetBox = (props) => {\n  return(\n    <div className=\"tweet-body\">\n      {props.children}\n    </div>\n  )\n}\n\nconst Image = (props) => {\n  return(\n    <img src={props.image} alt=\"Logo\" className=\"picture\">\n    </img>\n  )\n}\n\nconst Handle = (props) => {\n  return(\n    <div className=\"handle\">\n      {props.handle}\n    </div>\n  )\n}\n\nconst Name = (props) => {\n  return(\n    <div className=\"name\">\n      {props.name}\n    </div>\n  )\n}\n\nconst Tweet = (props) => {\n  return(\n    <div className=\"tweet\">\n      {props.tweet}\n    </div>\n  )\n}\n\nconst TweetBody = (props) => {\n  return(\n    <TweetBox>\n      <div className=\"inner-body\">\n        <Image image={props.image}/>\n        <div className=\"body\">\n          <div className=\"inner-body\">\n            <Name name={props.name}/>\n            <Handle handle={props.handle}/>\n          </div>\n          <Tweet tweet={props.tweet}/>\n        </div>\n      </div>\n    </TweetBox>\n  )\n}\n\nexport { TweetBody }","import React, { Component } from \"react\";\nimport { TweetBody } from \"./tweet\";\nimport {\n  PullToRefresh,\n  PullDownContent,\n  ReleaseContent,\n  RefreshContent\n} from \"react-js-pull-to-refresh\";\nimport \"./Console.css\";\n\nclass Console extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.getUser = this.getUser.bind(this);\n  }\n\n  handleRefresh() {\n    return new Promise(resolve => {\n      this.getUser();\n    });\n  }\n\n  componentWillMount() {\n    this.getUser();\n    this.getUser();\n    this.getUser();\n    this.getUser();\n  }\n\n  getUser() {\n    fetch(\"https://randomuser.me/api/\")\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(\"Request failed.\");\n      })\n      .then(data => {\n        this.setState({\n          users: [\n            {\n              name: data.results[0].name,\n              //   image: data.results[0].picture.medium,\n              image: \"\",\n\n              tweet: data.results[0].email\n            },\n            ...this.state.users\n          ]\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <PullToRefresh\n        pullDownContent={<PullDownContent />}\n        releaseContent={<ReleaseContent />}\n        refreshContent={<RefreshContent />}\n        pullDownThreshold={2}\n        onRefresh={this.handleRefresh}\n        triggerHeight={20}\n        backgroundColor=\"black\"\n      >\n        <div className=\"main-body\">\n          {[...this.state.users].map((user, index) => {\n            let name = \"Path Planning\";\n            let handle = \"09:36:47\";\n            let image = user.image;\n            let tweet = \"Searching Through A* Nodes\";\n            console.log(image);\n            return (\n              <TweetBody\n                key={index}\n                name={name}\n                handle={handle}\n                tweet={tweet}\n                image={image}\n              />\n            );\n          })}\n        </div>\n      </PullToRefresh>\n    );\n  }\n}\n\nexport default Console;\n","import SmartConnect from \"wslink/src/SmartConnect\";\nimport \"normalize.css\";\n\nimport RemoteRenderer from \"paraviewweb/src/NativeUI/Canvas/RemoteRenderer\";\nimport SizeHelper from \"paraviewweb/src/Common/Misc/SizeHelper\";\nimport ParaViewWebClient from \"paraviewweb/src/IO/WebSocket/ParaViewWebClient\";\nimport * as React from \"react\";\n// document.body.style.padding = \"0\";\n// document.body.style.margin = \"0\";\n\n// const divRenderer = document.createElement(\"div\");\n// document.body.appendChild(divRenderer);\n\n// divRenderer.style.position = \"relative\";\n// divRenderer.style.width = \"100vw\";\n// divRenderer.style.height = \"100vh\";\n// divRenderer.style.overflow = \"hidden\";\n\nexport default class Paraview extends React.Component {\n  componentDidMount() {\n    const divRenderer = document.getElementById(\"paraview_div\");\n    divRenderer.style.position = \"relative\";\n    divRenderer.style.width = \"100vw\";\n    divRenderer.style.height = \"100vh\";\n    divRenderer.style.overflow = \"hidden\";\n    const config = { sessionURL: \"ws://localhost:1234/ws\" };\n    const smartConnect = SmartConnect.newInstance({ config });\n    smartConnect.onConnectionReady(connection => {\n      const pvwClient = ParaViewWebClient.createClient(connection, [\n        \"MouseHandler\",\n        \"ViewPort\",\n        \"ViewPortImageDelivery\"\n      ]);\n      const renderer = new RemoteRenderer(pvwClient);\n      renderer.setContainer(divRenderer);\n      renderer.onImageReady(() => {\n        console.log(\"We are good\");\n      });\n      window.renderer = renderer;\n      SizeHelper.onSizeChange(() => {\n        renderer.resize();\n      });\n      SizeHelper.startListening();\n    });\n    smartConnect.connect();\n  }\n  render() {\n    return <div id=\"paraview_div\"></div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { Container, Nav } from \"./styled-components\";\n\n// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Maps from \"fusioncharts/fusioncharts.maps\";\nimport USARegion from \"fusionmaps/maps/es/fusioncharts.usaregion\";\nimport ReactFC from \"react-fusioncharts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\nimport { Radar } from \"react-chartjs-2\";\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport \"./charts-theme\";\n\nimport config from \"./config\";\nimport Dropdown from \"react-dropdown\";\nimport formatNum from \"./format-number\";\nimport Robot from \"./Robot\";\nimport Gauge from \"./Gauge\";\nimport UserImg from \"../assets/images/user-img-placeholder.jpeg\";\nimport Console from \"./Console\";\nimport Paraview from \"./Paraview\";\nimport Pusher from \"pusher-js\";\nimport { Tree, TreeNode } from \"react-organizational-chart\";\n\nReactFC.fcRoot(FusionCharts, Charts, Maps, USARegion, Widgets, Column2D);\n\nCharts(FusionCharts);\n\n// const url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"b19a4591cdd9ad1d70f7\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nvar channel = pusher.subscribe(\"robot\");\n\nexport default class RobotDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOptions: [],\n      selectedValue: null,\n      amRevenue: null,\n      ebRevenue: null,\n      etRevenue: null,\n      totalRevenue: null,\n      productViews: null,\n      purchaseRate: \" \",\n      checkoutRate: \" \",\n      abandonedRate: \" \",\n      ordersTrendStore: [],\n      position: [0, 0, 0],\n      angles: [20, 20, 20],\n      id: \"ROBOT\",\n      connection_status: \"OFFLINE\",\n      gripper_status: [],\n      battery_life: 30,\n      blocks_placed: 0,\n      a_link_blocks: 0,\n      d_link_blocks: 0,\n      robot_state: \"WAITING\",\n      end_effector_velocity: [],\n      last_behavior_id: \"behavior_root\",\n      behavior_times: [28, 48, 40, 300, 96]\n    };\n\n    let grippers = [];\n    grippers.push({\n      label: \"A Gripper\",\n      value: 0,\n      displayValue: `${0}`\n    });\n    grippers.push({\n      label: \"D Gripper\",\n      value: 0,\n      displayValue: `${0}`\n    });\n    this.setState({\n      gripper_status: grippers\n    });\n  }\n\n  getData = arg => {\n    // google sheets data\n    const arr = this.state.items;\n    const arrLen = arr.length;\n\n    // kpi's\n    // amazon revenue\n    let amRevenue = 0;\n    //ebay revenue\n    let ebRevenue = 0;\n    // etsy revenue\n    let etRevenue = 0;\n    // total revenue\n    let totalRevenue = 0;\n    // product views\n    let productViews = 0;\n    // purchase rate\n    let purchaseRate = 0;\n    // checkout rate\n    let checkoutRate = 0;\n    // abandoned rate\n    let abandonedRate = 0;\n    // order trend by brand\n    let ordersTrendStore = [];\n    // order trend by region\n    let ordersTrendRegion = [];\n    let orderesTrendnw = 0;\n    let orderesTrendsw = 0;\n    let orderesTrendc = 0;\n    let orderesTrendne = 0;\n    let orderesTrendse = 0;\n\n    // let selectedValue = null;\n\n    for (let i = 0; i < arrLen; i++) {\n      if (arg === arr[i][\"month\"]) {\n        if (arr[i][\"source\"] === \"AM\") {\n          amRevenue += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Motor 1\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders}`\n          });\n        } else if (arr[i][\"source\"] === \"EB\") {\n          ebRevenue += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Motor 2\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders}`\n          });\n        } else if (arr[i][\"source\"] === \"ET\") {\n          etRevenue += parseInt(arr[i].revenue);\n          ordersTrendStore.push({\n            label: \"Motor 3\",\n            value: arr[i].orders,\n            displayValue: `${arr[i].orders}`\n          });\n        }\n        productViews += parseInt(arr[i].product_views);\n        purchaseRate += parseInt(arr[i].purchase_rate / 3);\n        checkoutRate += parseInt(arr[i].checkout_rate / 3);\n        abandonedRate += parseInt(arr[i].abandoned_rate / 3);\n        orderesTrendnw += parseInt(arr[i].orders_nw);\n        orderesTrendsw += parseInt(arr[i].orders_sw);\n        orderesTrendc += parseInt(arr[i].orders_c);\n        orderesTrendne += parseInt(arr[i].orders_ne);\n        orderesTrendse += parseInt(arr[i].orders_se);\n      }\n    }\n\n    totalRevenue = amRevenue + ebRevenue + etRevenue;\n    ordersTrendRegion.push(\n      {\n        id: \"01\",\n        value: orderesTrendne\n      },\n      {\n        id: \"02\",\n        value: orderesTrendnw\n      },\n      {\n        id: \"03\",\n        value: orderesTrendse\n      },\n      {\n        id: \"04\",\n        value: orderesTrendsw\n      },\n      {\n        id: \"05\",\n        value: orderesTrendc\n      }\n    );\n\n    // selectedValue = \"0\";\n\n    // setting state\n    this.setState({\n      amRevenue: formatNum(amRevenue),\n      ebRevenue: formatNum(ebRevenue),\n      etRevenue: formatNum(etRevenue),\n      totalRevenue: formatNum(totalRevenue),\n      productViews: formatNum(productViews),\n      purchaseRate: purchaseRate,\n      checkoutRate: checkoutRate,\n      abandonedRate: abandonedRate,\n      ordersTrendStore: ordersTrendStore,\n      ordersTrendRegion: ordersTrendRegion\n      // selectedValue: selectedValue\n    });\n  };\n\n  updateDashboard = event => {\n    // this.getData(event.value);\n    this.setState({ selectedValue: event.value });\n  };\n\n  check_alive_status = () => {\n    this.setState({ connection_status: \"OFFLINE\" });\n  };\n\n  selectBehavior = input => {\n    let select_behavior = \"\";\n    switch (input) {\n      case \"wait\":\n        select_behavior = \"behavior_wait\";\n        break;\n      case \"update\":\n        select_behavior = \"behavior_update\";\n        break;\n\n      case \"build\":\n        select_behavior = \"behavior_build\";\n        break;\n\n      case \"build_MoveToBlockToRemove\":\n        select_behavior = \"behavior_build_nav_one\";\n        break;\n\n      case \"build_RemoveBlock\":\n        select_behavior = \"behavior_build_remove\";\n        break;\n      case \"build_MoveToPlaceBlock\":\n        select_behavior = \"behavior_build_nav_two\";\n        break;\n      case \"build_PlaceBlock\":\n        select_behavior = \"behavior_build_place\";\n        break;\n\n      case \"ferry\":\n        select_behavior = \"behavior_ferry\";\n        break;\n\n      case \"ferry_MoveToBlockToRemove\":\n        select_behavior = \"behavior_ferry_nav_one\";\n        break;\n\n      case \"ferry_RemoveBlock\":\n        select_behavior = \"behavior_ferry_remove\";\n        break;\n      case \"ferry_MoveToPlaceBlock\":\n        select_behavior = \"behavior_ferry_nav_two\";\n        break;\n      case \"ferry_PlaceBlock\":\n        select_behavior = \"behavior_ferry_place\";\n        break;\n\n      case \"root\":\n      default:\n        select_behavior = \"behavior_root\";\n        break;\n    }\n    document.getElementById(select_behavior).classList.add(\"selected_behavior\");\n\n    document\n      .getElementById(this.state.last_behavior_id)\n      .classList.remove(\"selected_behavior\");\n\n    this.setState({ last_behavior_id: select_behavior });\n  };\n  componentDidMount() {\n    this.alive = setInterval(this.check_alive_status, 15000);\n\n    // setInterval(() => {\n    //   var items = [\n    //     \"wait\",\n    //     \"update\",\n    //     \"root\",\n    //     \"build\",\n    //     \"ferry\",\n    //     \"build_remove\",\n    //     \"build_place\",\n    //     \"ferry_remove\",\n    //     \"ferry_place\"\n    //   ];\n    //   var item = items[Math.floor(Math.random() * items.length)];\n    //   // behavior = data[\"behavior\"];\n    //   // parent = data[\"parent\"];\n    //   // if (parent === null) {\n    //   //   this.selectBehavior(behavior);\n    //   // } else {\n    //   //   this.selectBehavior(behavior + parent);\n    //   // }\n    //   this.selectBehavior(item);\n    // }, 5000);\n\n    channel.bind(\"behavior_tree\", data => {\n      console.log(data);\n      var behavior = data[\"behavior\"];\n      var parent = data[\"parent\"];\n      console.log(parent);\n      if (this.props.robot_id === data[\"id\"]) {\n        if (parent == null) {\n          this.selectBehavior(behavior);\n          console.log(\"Parent is not there\");\n        } else {\n          this.selectBehavior(parent + \"_\" + behavior);\n        }\n      }\n    });\n\n    channel.bind(\"behavior_time\", data => {\n      console.log(data);\n      console.log(this.props.robot_id);\n      console.log(data[\"id\"]);\n      if (this.props.robot_id === data[\"id\"]) {\n        this.setState({\n          behavior_times: [\n            data[\"wait\"],\n            data[\"update\"],\n            data[\"move\"],\n            data[\"ferry\"],\n            data[\"build\"]\n          ]\n        });\n      }\n    });\n\n    channel.bind(\"behavior\", data => {\n      this.selectBehavior(data[\"behavior\"]);\n    });\n    channel.bind(\"state\", data => {\n      // alert(JSON.stringify(data));\n      clearInterval(this.alive);\n      this.alive = setInterval(this.check_alive_status, 15000);\n\n      // if (data[\"id\"] in this.state.dropdownOptions) {\n      if (this.props.robot_id === data[\"id\"]) {\n        let grippers = [];\n        grippers.push({\n          label: \"A Gripper\",\n          value: data[\"grippers\"].a,\n          displayValue: `${data[\"grippers\"].a}`\n        });\n        grippers.push({\n          label: \"D Gripper\",\n          value: data[\"grippers\"].d,\n          displayValue: `${data[\"grippers\"].d}`\n        });\n\n        let velocity = this.state.end_effector_velocity;\n        if (velocity.length > 7) {\n          velocity.splice(0, 1);\n        }\n        velocity.push(data[\"end_effector_velocity\"]);\n        velocity.flat(Infinity);\n        this.setState({\n          connection_status: \"CONNECTED\",\n          position: data[\"position\"],\n          id: data[\"id\"],\n          angles: data[\"angles\"],\n          gripper_status: grippers,\n          battery_life: data[\"battery\"],\n          blocks_placed: data[\"blocks_placed\"],\n          a_link_blocks: data[\"a_link_blocks\"],\n          d_link_blocks: data[\"d_link_blocks\"],\n          robot_state: data[\"robot_state\"],\n          end_effector_velocity: velocity\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(\"EE Velocity: \", this.state.end_effector_velocity);\n    return (\n      <div>\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          {/* row 1 - revenue */}\n          <Container className=\"row full-height\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Connection Status\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-wifi text-large logo-adjust\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.connection_status}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot Orientation\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"far fa-compass text-large\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large \">\n                  {\"HORIZONTAL\"}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot Position\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-map-marked-alt\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  ({this.state.position[0]}, {this.state.position[1]},{\" \"}\n                  {this.state.position[2]})\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card chart-card is-card-dark\">\n                <Container className=\"chart-container full-height\">\n                  <Gauge battery={this.state.battery_life} />\n                </Container>\n                {/* </Container> */}\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 2 - conversion */}\n          <Container className=\"row\">\n            <Container className=\"col-md-4 col-lg-3 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading mb-3\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Blocks Placed\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.blocks_placed}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    blocks\n                  </span>\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-8 col-lg-9 is-light-text mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"row full-height\">\n                  <Container className=\"col-sm-4 full height\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Joint 1\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.angles[0]}º`,\n                              paletteColors: \"#3B70C4, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.angles[0]}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${360 - this.state.angles[0]}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                  <Container className=\"col-sm-4 full-height border-left border-right\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Joint 2\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.angles[1]}º`,\n                              paletteColors: \"#41B6C4, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.angles[1]}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${360 - this.state.angles[1]}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                  <Container className=\"col-sm-4 full-height\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Joint 3\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.angles[2]}º`,\n                              paletteColors: \"#EDF8B1, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.angles[2]}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${360 - this.state.angles[2]}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 3 - orders trend */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"bar2d\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"% Closed\",\n                          subCaption: \"Grippers\"\n                        },\n                        data: this.state.gripper_status\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              {/* <Container className=\"card is-card-dark chart-card\"> */}\n              <Container className=\"card grid-card is-light-text mb-4 is-card-dark\">\n                <Container className=\"card-heading mb-3\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot State:\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-1 text-x-large\">\n                  {this.state.robot_state}\n                  {/* {this.state.productViews} */}\n                  {/* <span className=\"text-medium pl-2 is-dark-text-light\">\n                    blocks\n                  </span> */}\n                </Container>\n                <Container className=\"card-heading mb-3 pt-5\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    A Link Number Blocks\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-1 text-x-large\">\n                  {this.state.a_link_blocks}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    block(s)\n                  </span>\n                </Container>\n                <Container className=\"card-heading mb-3 pt-5\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    D Link Number Blocks\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-1 text-x-large\">\n                  {this.state.d_link_blocks}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    block(s)\n                  </span>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 5 - orders trend */}\n\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height is-dark-text-light\">\n                  Robot Behavior Time\n                  <Radar\n                    height={1}\n                    width={1}\n                    data={{\n                      labels: [\"Wait\", \"Update\", \"Move\", \"Ferry\", \"Build\"],\n                      datasets: [\n                        {\n                          label: \"Behavior Time (seconds)\",\n                          pointLabelFontColor: \"white\",\n                          backgroundColor: \"rgba(59, 112, 196, 0.2)\",\n                          borderColor: \"#3B70C4\",\n                          pointBackgroundColor: \"#fff\",\n                          pointBorderColor: \"#fff\",\n                          pointHoverBackgroundColor: \"#fff\",\n                          pointHoverBorderColor: \"rgba(59, 112, 196, 0.2)\",\n                          data: this.state.behavior_times\n                        }\n                      ]\n                    }}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: true,\n                      scale: {\n                        gridLines: {\n                          color: [\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\"\n                          ]\n                        },\n                        pointLabels: {\n                          fontColor: \"white\"\n                        }\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"line\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"End Effector Velocity (norm)\",\n                          xAxisName: \"Timestamp\",\n                          yAxisName: \"Velocity (m/s)\",\n                          lineThickness: \"2\",\n                          paletteColors: \"#3B70C4, #000000\"\n                        },\n                        data: this.state.end_effector_velocity\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            {/* <Container className=\"col-md-6 mb-4\"> */}\n            <Container className=\"is-card-dark chart-card scrollable-x\">\n              <Container className=\" large full-height scrollable-x behavior_container\">\n                <Tree\n                  lineWidth={\"2px\"}\n                  lineColor={\"white\"}\n                  lineBorderRadius={\"10px\"}\n                  label={\n                    <div\n                      id=\"behavior_root\"\n                      className=\"behavior behavior_extra selected_behavior\"\n                    >\n                      Root\n                    </div>\n                  }\n                >\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_update\" className=\"behavior\">\n                        Update\n                      </div>\n                    }\n                  />\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_build\" className=\"behavior\">\n                        Build\n                      </div>\n                    }\n                  >\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_nav_one\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_remove\" className=\"behavior\">\n                          Remove Block\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_nav_two\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_place\" className=\"behavior\">\n                          Place Block\n                        </div>\n                      }\n                    />\n                  </TreeNode>\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_ferry\" className=\"behavior\">\n                        Ferry\n                      </div>\n                    }\n                  >\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_nav_one\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_remove\" className=\"behavior\">\n                          Remove Block\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_nav_two\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_place\" className=\"behavior\">\n                          Place Block\n                        </div>\n                      }\n                    />\n                  </TreeNode>\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_wait\" className=\"behavior\">\n                        Wait\n                      </div>\n                    }\n                  />\n                </Tree>\n              </Container>\n              {/* </Container> */}\n            </Container>\n          </Container>\n\n          {/* {Row 6} */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            {/* <Container className=\"col-md-6 mb-4\"> */}\n            <Container className=\"is-card-dark chart-card\">\n              <Container className=\" large full-height scrollable\">\n                <Console />\n              </Container>\n              {/* </Container> */}\n            </Container>\n          </Container>\n        </Container>\n        <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n          <Paraview />\n        </Container>\n\n        {/* content area end */}\n      </div>\n    );\n  }\n}\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\nimport {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from \"three\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function ( object, domElement ) {\n\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\tthis.object = object;\n\tthis.domElement = domElement;\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the object orbits around\n\tthis.target = new Vector3();\n\n\t// How far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// How far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to enable damping (inertia)\n\t// If damping is enabled, you must call controls.update() in your animation loop\n\tthis.enableDamping = false;\n\tthis.dampingFactor = 0.05;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t// Set to false to disable zooming\n\tthis.enableZoom = true;\n\tthis.zoomSpeed = 1.0;\n\n\t// Set to false to disable rotating\n\tthis.enableRotate = true;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to false to disable panning\n\tthis.enablePan = true;\n\tthis.panSpeed = 1.0;\n\tthis.screenSpacePanning = false; // if true, pan in screen-space\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// Set to false to disable use of the keys\n\tthis.enableKeys = true;\n\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t// Mouse buttons\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t// Touch fingers\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t// for reset\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t//\n\t// public methods\n\t//\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn spherical.phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn spherical.theta;\n\n\t};\n\n\tthis.saveState = function () {\n\n\t\tscope.target0.copy( scope.target );\n\t\tscope.position0.copy( scope.object.position );\n\t\tscope.zoom0 = scope.object.zoom;\n\n\t};\n\n\tthis.reset = function () {\n\n\t\tscope.target.copy( scope.target0 );\n\t\tscope.object.position.copy( scope.position0 );\n\t\tscope.object.zoom = scope.zoom0;\n\n\t\tscope.object.updateProjectionMatrix();\n\t\tscope.dispatchEvent( changeEvent );\n\n\t\tscope.update();\n\n\t\tstate = STATE.NONE;\n\n\t};\n\n\t// this method is exposed, but perhaps it would be better if we can make it private...\n\tthis.update = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tvar quatInverse = quat.clone().inverse();\n\n\t\tvar lastPosition = new Vector3();\n\t\tvar lastQuaternion = new Quaternion();\n\n\t\treturn function update() {\n\n\t\t\tvar position = scope.object.position;\n\n\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t// angle from z-axis around y-axis\n\t\t\tspherical.setFromVector3( offset );\n\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t} else {\n\n\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t}\n\n\t\t\t// restrict theta to be between desired limits\n\t\t\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n\t\t\t// restrict phi to be between desired limits\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\tspherical.makeSafe();\n\n\n\t\t\tspherical.radius *= scale;\n\n\t\t\t// restrict radius to be between desired limits\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t// move target to panned location\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t}\n\n\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t} else {\n\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\tscale = 1;\n\n\t\t\t// update condition is:\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\tif ( zoomChanged ||\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\tzoomChanged = false;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t};\n\n\t}();\n\n\tthis.dispose = function () {\n\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n\t\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t};\n\n\t//\n\t// internals\n\t//\n\n\tvar scope = this;\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tvar STATE = {\n\t\tNONE: - 1,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2,\n\t\tTOUCH_ROTATE: 3,\n\t\tTOUCH_PAN: 4,\n\t\tTOUCH_DOLLY_PAN: 5,\n\t\tTOUCH_DOLLY_ROTATE: 6\n\t};\n\n\tvar state = STATE.NONE;\n\n\tvar EPS = 0.000001;\n\n\t// current position in spherical coordinates\n\tvar spherical = new Spherical();\n\tvar sphericalDelta = new Spherical();\n\n\tvar scale = 1;\n\tvar panOffset = new Vector3();\n\tvar zoomChanged = false;\n\n\tvar rotateStart = new Vector2();\n\tvar rotateEnd = new Vector2();\n\tvar rotateDelta = new Vector2();\n\n\tvar panStart = new Vector2();\n\tvar panEnd = new Vector2();\n\tvar panDelta = new Vector2();\n\n\tvar dollyStart = new Vector2();\n\tvar dollyEnd = new Vector2();\n\tvar dollyDelta = new Vector2();\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction rotateLeft( angle ) {\n\n\t\tsphericalDelta.theta -= angle;\n\n\t}\n\n\tfunction rotateUp( angle ) {\n\n\t\tsphericalDelta.phi -= angle;\n\n\t}\n\n\tvar panLeft = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\tv.multiplyScalar( - distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\tvar panUp = function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t}\n\n\t\t\tv.multiplyScalar( distance );\n\n\t\t\tpanOffset.add( v );\n\n\t\t};\n\n\t}();\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\tvar pan = function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement;\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\tscope.enablePan = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}();\n\n\tfunction dollyIn( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\tfunction dollyOut( dollyScale ) {\n\n\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tzoomChanged = true;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tscope.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\tfunction handleMouseDownRotate( event ) {\n\n\t\trotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownDolly( event ) {\n\n\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseDownPan( event ) {\n\n\t\tpanStart.set( event.clientX, event.clientY );\n\n\t}\n\n\tfunction handleMouseMoveRotate( event ) {\n\n\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMoveDolly( event ) {\n\n\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t}\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseMovePan( event ) {\n\n\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\tfunction handleMouseWheel( event ) {\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tdollyOut( getZoomScale() );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tdollyIn( getZoomScale() );\n\n\t\t}\n\n\t\tscope.update();\n\n\t}\n\n\tfunction handleKeyDown( event ) {\n\n\t\tvar needsUpdate = false;\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.update();\n\n\t\t}\n\n\n\t}\n\n\tfunction handleTouchStartRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartPan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\tfunction handleTouchStartDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyStart.set( 0, distance );\n\n\t}\n\n\tfunction handleTouchStartDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t}\n\n\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t}\n\n\tfunction handleTouchMoveRotate( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\trotateEnd.set( x, y );\n\n\t\t}\n\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\tvar element = scope.domElement;\n\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\trotateStart.copy( rotateEnd );\n\n\t}\n\n\tfunction handleTouchMovePan( event ) {\n\n\t\tif ( event.touches.length == 1 ) {\n\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t} else {\n\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\tpanEnd.set( x, y );\n\n\t\t}\n\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\tpan( panDelta.x, panDelta.y );\n\n\t\tpanStart.copy( panEnd );\n\n\t}\n\n\tfunction handleTouchMoveDolly( event ) {\n\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tdollyEnd.set( 0, distance );\n\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\tdollyIn( dollyDelta.y );\n\n\t\tdollyStart.copy( dollyEnd );\n\n\t}\n\n\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t}\n\n\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t}\n\n\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t// no-op\n\n\t}\n\n\t//\n\t// event handlers - FSM: listen for events and reset state\n\t//\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Prevent the browser from scrolling.\n\n\t\tevent.preventDefault();\n\n\t\t// Manually set the focus since calling preventDefault above\n\t\t// prevents the browser from setting it automatically.\n\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\tswitch ( event.button ) {\n\n\t\t\tcase 0:\n\n\t\t\t\tswitch ( scope.mouseButtons.LEFT ) {\n\n\t\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.mouseButtons.MIDDLE ) {\n\n\t\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.mouseButtons.RIGHT ) {\n\n\t\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.DOLLY:\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onMouseUp( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleMouseUp( event );\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tscope.dispatchEvent( startEvent );\n\n\t\thandleMouseWheel( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\thandleKeyDown( event );\n\n\t}\n\n\tfunction onTouchStart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\n\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\n\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\n\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t}\n\n\tfunction onTouchMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( state ) {\n\n\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\tscope.update();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction onTouchEnd( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\thandleTouchEnd( event );\n\n\t\tscope.dispatchEvent( endEvent );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onContextMenu( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\t//\n\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\t// make sure element can receive keys.\n\n\tif ( scope.domElement.tabIndex === - 1 ) {\n\n\t\tscope.domElement.tabIndex = 0;\n\n\t}\n\n\t// force an update at start\n\n\tthis.update();\n\n};\n\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\nOrbitControls.prototype.constructor = OrbitControls;\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function ( object, domElement ) {\n\n\tOrbitControls.call( this, object, domElement );\n\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\tthis.touches.ONE = TOUCH.PAN;\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n};\n\nMapControls.prototype = Object.create( EventDispatcher.prototype );\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","import * as THREE from \"three\";\nimport * as dat from \"dat.gui\";\nimport { OrbitControls } from \"./OrbitControls.js\";\n\nclass VoxelWorld {\n  constructor(cellSize) {\n    this.cellSize = cellSize;\n    this.cellSliceSize = cellSize * cellSize;\n    this.cell = new Uint8Array(cellSize * cellSize * cellSize);\n  }\n  computeVoxelOffset(x, y, z) {\n    const { cellSize, cellSliceSize } = this;\n    const voxelX = THREE.Math.euclideanModulo(x, cellSize) | 0;\n    const voxelY = THREE.Math.euclideanModulo(y, cellSize) | 0;\n    const voxelZ = THREE.Math.euclideanModulo(z, cellSize) | 0;\n    return voxelY * cellSliceSize + voxelZ * cellSize + voxelX;\n  }\n  getCellForVoxel(x, y, z) {\n    const { cellSize } = this;\n    const cellX = Math.floor(x / cellSize);\n    const cellY = Math.floor(y / cellSize);\n    const cellZ = Math.floor(z / cellSize);\n    if (cellX !== 0 || cellY !== 0 || cellZ !== 0) {\n      return null;\n    }\n    return this.cell;\n  }\n  setVoxel(x, y, z, v) {\n    const cell = this.getCellForVoxel(x, y, z);\n    if (!cell) {\n      return; // TODO: add a new cell?\n    }\n    const voxelOffset = this.computeVoxelOffset(x, y, z);\n    cell[voxelOffset] = v;\n  }\n  getVoxel(x, y, z) {\n    const cell = this.getCellForVoxel(x, y, z);\n    if (!cell) {\n      return 0;\n    }\n    const voxelOffset = this.computeVoxelOffset(x, y, z);\n    return cell[voxelOffset];\n  }\n  generateGeometryDataForCell(cellX, cellY, cellZ) {\n    const { cellSize } = this;\n    const positions = [];\n    const normals = [];\n    const indices = [];\n    const startX = cellX * cellSize;\n    const startY = cellY * cellSize;\n    const startZ = cellZ * cellSize;\n\n    for (let y = 0; y < cellSize; ++y) {\n      const voxelY = startY + y;\n      for (let z = 0; z < cellSize; ++z) {\n        const voxelZ = startZ + z;\n        for (let x = 0; x < cellSize; ++x) {\n          const voxelX = startX + x;\n          const voxel = this.getVoxel(voxelX, voxelY, voxelZ);\n          if (voxel) {\n            // There is a voxel here but do we need faces for it?\n            for (const { dir, corners } of VoxelWorld.faces) {\n              const neighbor = this.getVoxel(\n                voxelX + dir[0],\n                voxelY + dir[1],\n                voxelZ + dir[2]\n              );\n              if (!neighbor) {\n                // this voxel has no neighbor in this direction so we need a face.\n                const ndx = positions.length / 3;\n                for (const pos of corners) {\n                  positions.push(pos[0] + x, pos[1] + y, pos[2] + z);\n                  normals.push(...dir);\n                }\n                indices.push(ndx, ndx + 1, ndx + 2, ndx + 2, ndx + 1, ndx + 3);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      positions,\n      normals,\n      indices\n    };\n  }\n}\n\nVoxelWorld.faces = [\n  {\n    // left\n    dir: [-1, 0, 0],\n    corners: [\n      [0, 1, 0],\n      [0, 0, 0],\n      [0, 1, 1],\n      [0, 0, 1]\n    ]\n  },\n  {\n    // right\n    dir: [1, 0, 0],\n    corners: [\n      [1, 1, 1],\n      [1, 0, 1],\n      [1, 1, 0],\n      [1, 0, 0]\n    ]\n  },\n  {\n    // bottom\n    dir: [0, -1, 0],\n    corners: [\n      [1, 0, 1],\n      [0, 0, 1],\n      [1, 0, 0],\n      [0, 0, 0]\n    ]\n  },\n  {\n    // top\n    dir: [0, 1, 0],\n    corners: [\n      [0, 1, 1],\n      [1, 1, 1],\n      [0, 1, 0],\n      [1, 1, 0]\n    ]\n  },\n  {\n    // back\n    dir: [0, 0, -1],\n    corners: [\n      [1, 0, 0],\n      [0, 0, 0],\n      [1, 1, 0],\n      [0, 1, 0]\n    ]\n  },\n  {\n    // front\n    dir: [0, 0, 1],\n    corners: [\n      [0, 0, 1],\n      [1, 0, 1],\n      [0, 1, 1],\n      [1, 1, 1]\n    ]\n  }\n];\n\nfunction main() {\n  const canvas = document.getElementById(\"#c\");\n  const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n  // renderer.setPixelRatio(window.devicePixelRatio);\n  // renderer.setSize(window.innerWidth, window.innerHeight);\n\n  // container.appendChild(renderer.domElement);\n\n  renderer.outputEncoding = THREE.sRGBEncoding;\n\n  renderer.shadowMap.enabled = true;\n  let blueprint = [\n    [\n      [1, 1, 1],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ],\n    [\n      [1, 1, 1],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0]\n    ]\n  ];\n\n  //   const cellSize = blueprint.size * blueprint[0].size * blueprint[0][0].size;\n  const cellSize = 60;\n\n  const fov = 80;\n  const aspect = 2; // the canvas default\n  const near = 0.1;\n  const far = 30;\n  // const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  // camera.positiozn.set(-cellSize * 0.3, cellSize * 0.8, -cellSize * 0.3);\n  var camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.z = 20;\n  camera.position.x = -5;\n  camera.position.y = -5;\n  camera.lookAt(0, 0, 0);\n  camera.updateProjectionMatrix();\n  const controls = new OrbitControls(camera, canvas);\n  controls.target.set(cellSize / 2, cellSize / 3, cellSize / 2);\n\n  // var controls = new OrbitControls(camera, renderer.domElement);\n  // controls.maxPolarAngle = Math.PI * 0.5;\n  // controls.minDistance = 1000;\n  // controls.maxDistance = 5000;\n  controls.update();\n\n  var scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xcce0ff);\n  scene.fog = new THREE.Fog(0xcce0ff, 500, 10000);\n\n  // camera\n\n  // var camera = new THREE.PerspectiveCamera(\n  //   30,\n  //   window.innerWidth / window.innerHeight,\n  //   1,\n  //   10000\n  // );\n  // camera.position.set(1000, 50, 1500);\n\n  // var controls = new OrbitControls(camera, renderer.domElement);\n  // controls.maxPolarAngle = Math.PI * 0.5;\n  // controls.minDistance = 1000;\n  // controls.maxDistance = 5000;\n  // const scene = new THREE.Scene();\n  //   scene.background = new THREE.Color(\"lightblue\");\n\n  // function addLight(x, y, z) {\n  //   const color = 0xffffff;\n  //   const intensity = 1;\n  //   const light = new THREE.DirectionalLight(color, intensity);\n  //   light.position.set(x, y, z);\n  //   scene.add(light);\n  // }\n  // addLight(-1, 2, 4);\n  // addLight(1, -1, -2);\n\n  scene.add(new THREE.AmbientLight(0x666666));\n\n  var light = new THREE.DirectionalLight(0xdfebff, 1);\n  light.position.set(50, 200, 100);\n  light.position.multiplyScalar(1.3);\n\n  light.castShadow = true;\n\n  light.shadow.mapSize.width = 1024;\n  light.shadow.mapSize.height = 1024;\n\n  var d = 300;\n\n  light.shadow.camera.left = -d;\n  light.shadow.camera.right = d;\n  light.shadow.camera.top = d;\n  light.shadow.camera.bottom = -d;\n\n  light.shadow.camera.far = 1000;\n\n  scene.add(light);\n\n  var loader = new THREE.TextureLoader();\n\n  // load a resource\n  loader.load(\n    // resource URL\n    \"http://192.168.1.145:8000/grasslight-big.jpg\",\n    // Function when resource is loaded\n    function(texture) {\n      // in this example we create the material when the texture is loaded\n      var material = new THREE.MeshBasicMaterial({\n        map: texture\n      });\n    },\n\n    // onProgress callback currently not supported\n    undefined,\n\n    // onError callback\n    function(err) {\n      console.error(\"An error happened.\");\n      console.error(err);\n    }\n  );\n\n  // var loader = new THREE.TextureLoader();\n  // const getTextures = () =>\n  //   new Promise((resolve, reject) => {\n  //     // const manager = new THREE.LoadingManager(() => resolve());\n  //     const loader = new THREE.TextureLoader();\n  //     THREE.DefaultLoadingManager.onLoad = () => resolve(textures);\n  //     const textures = [\"./textures/terrain/grasslight-big.jpg\"].map(filename =>\n  //       loader.load(filename)\n  //     );\n  // var groundTexture = loader.load(\"./textures/terrain/grasslight-big.jpg\");\n  // groundTexture.wrapS = groundTexture.wrapT = THREE.RepeatWrapping;\n  // groundTexture.repeat.set(25, 25);\n  // groundTexture.anisotropy = 16;\n  // groundTexture.encoding = THREE.sRGBEncoding;\n\n  // var groundMaterial = new THREE.MeshLambertMaterial({\n  //   map: groundTexture\n  // });\n\n  // var mesh = new THREE.Mesh(\n  //   new THREE.PlaneBufferGeometry(20000, 20000),\n  //   groundMaterial\n  // );\n  // mesh.position.y = 0;\n  // mesh.rotation.x = -Math.PI / 2;\n  // mesh.receiveShadow = true;\n  // scene.add(mesh);\n  // console.log(\"Added grass\");\n  // console.log(groundTexture);\n  // console.log(groundMaterial);\n  // console.log(mesh);\n  // });\n  // getTextures().then(result => console.log(\"We received,\", result, \"!\"));\n\n  const world = new VoxelWorld(cellSize);\n\n  //   for (let y = 0; y < cellSize; ++y) {\n  //     for (let z = 0; z < cellSize; ++z) {\n  //       for (let x = 0; x < cellSize; ++x) {\n  //         const height = 10;\n  //         if (y < height) {\n\n  var i,\n    j,\n    k = 0;\n  for (i = 0; i < blueprint.length; i++) {\n    for (j = 0; j < blueprint[i].length; j++) {\n      for (k = 0; k < blueprint[i][j].length; k++) {\n        if (blueprint[i][j][k] === 1) {\n          world.setVoxel(j, k, i, 1);\n        }\n      }\n    }\n  }\n\n  const { positions, normals, indices } = world.generateGeometryDataForCell(\n    0,\n    0,\n    0\n  );\n  const geometry = new THREE.BufferGeometry();\n  const material = new THREE.MeshLambertMaterial({\n    color: \"green\"\n  });\n\n  const positionNumComponents = 3;\n  const normalNumComponents = 3;\n  geometry.setAttribute(\n    \"position\",\n    new THREE.BufferAttribute(\n      new Float32Array(positions),\n      positionNumComponents\n    )\n  );\n  geometry.setAttribute(\n    \"normal\",\n    new THREE.BufferAttribute(new Float32Array(normals), normalNumComponents)\n  );\n  geometry.setIndex(indices);\n  const mesh = new THREE.Mesh(geometry, material);\n  scene.add(mesh);\n\n  function resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n\n  let renderRequested = false;\n\n  function render() {\n    renderRequested = undefined;\n\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n\n    controls.update();\n    renderer.render(scene, camera);\n  }\n  render();\n\n  function requestRenderIfNotRequested() {\n    if (!renderRequested) {\n      renderRequested = true;\n      requestAnimationFrame(render);\n    }\n  }\n\n  controls.addEventListener(\"change\", requestRenderIfNotRequested);\n  window.addEventListener(\"resize\", requestRenderIfNotRequested);\n}\nexport { main };\n","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport * as dat from \"dat.gui\";\nimport { OrbitControls } from \"./OrbitControls.js\";\nimport { main } from \"./Block.js\";\nimport \"./voxels.css\";\n\nexport default class BlockSimulation extends Component {\n  //   display_robot() {\n  //     var scene = new THREE.Scene();\n  //     var robot_div = document.getElementById(\"block\");\n  //     // Camera\n  //     var aspect =\n  //       robot_div.parentNode.clientWidth / robot_div.parentNode.clientHeight;\n  //     var camera = new THREE.PerspectiveCamera(60, aspect, 0.1, 1000);\n  //     camera.position.z = 5;\n  //     camera.position.x = 5;\n  //     camera.position.y = 5;\n  //     camera.lookAt(0, 1.5, 0);\n  //     camera.updateProjectionMatrix();\n  //     // var controls = new THREE.OrbitControls( camera );\n\n  //     // Renderer\n  //     var renderer = new THREE.WebGLRenderer({ antialias: true });\n  //     renderer.setSize(\n  //       robot_div.parentNode.clientWidth,\n  //       robot_div.parentNode.clientHeight\n  //     );\n  //     robot_div.appendChild(renderer.domElement);\n\n  //     var material = new THREE.MeshStandardMaterial();\n\n  //     var geometry = new THREE.BoxGeometry(1, 1, 1);\n  //     var base = new THREE.Mesh(geometry, material);\n  //     scene.add(base);\n  //     base.position.x = 0;\n\n  //     geometry = new THREE.BoxGeometry(1, 1, 1);\n  //     base = new THREE.Mesh(geometry, material);\n  //     scene.add(base);\n  //     base.position.x = 1;\n\n  //     let blueprint = [\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [1, 1, 1]],\n  //       [[1, 0, 0], [1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n  //     ];\n  //     var i,\n  //       j,\n  //       k = 0;\n  //     for (i = 0; i < blueprint.length; i++) {\n  //       for (j = 0; j < blueprint[i].length; j++) {\n  //         for (k = 0; k < blueprint[i][j].length; k++) {\n  //           if (blueprint[i][j][k] == 1) {\n  //             geometry = new THREE.BoxGeometry(1, 1, 1);\n  //             base = new THREE.Mesh(geometry, material);\n  //             scene.add(base);\n  //             base.position.x = i;\n  //             base.position.y = j;\n  //             base.position.z = k;\n  //           }\n  //         }\n  //       }\n  //     }\n\n  //     // Light\n  //     var light = new THREE.DirectionalLight(0xffffff, 1.0);\n  //     light.position.set(10, 5, 10);\n  //     light.target = base;\n  //     scene.add(light);\n\n  //     light = new THREE.AmbientLight(0xffffff, 0.5);\n  //     scene.add(light);\n\n  //     // Options (DAT.GUI)\n  //     var options = {\n  //       base: 0,\n  //       cameray: 0,\n  //       cameraz: 0,\n  //       camerax: 0\n\n  //       // shoulder: 0,\n  //       // elbow: -44,\n  //       // secondElbow: -56,\n  //       // newArm: -68,\n  //     };\n  //     // DAT.GUI Related Stuff\n  //     var gui = new dat.GUI();\n  //     gui.add(options, \"base\", -180, 180).listen();\n  //     gui.add(options, \"cameray\", -180, 180).listen();\n  //     gui.add(options, \"cameraz\", -180, 180).listen();\n  //     gui.add(options, \"camerax\", -180, 180).listen();\n\n  //     // gui.add(options, 'elbow', -180, 180).listen();\n  //     // gui.add(options, 'secondElbow', -180, 180).listen();\n  //     // gui.add(options, 'newArm', -180, 180).listen();\n\n  //     // Rendering\n  //     var zAxis = new THREE.Vector3(0, 0, 1);\n  //     var yAxis = new THREE.Vector3(0, 1, 0);\n  //     var xAxis = new THREE.Vector3(1, 0, 0);\n\n  //     var show = function() {\n  //       requestAnimationFrame(show);\n\n  //       // Rotate joints\n  //       base.setRotationFromAxisAngle(yAxis, (options.base * Math.PI) / 180);\n  //       camera.setRotationFromAxisAngle(yAxis, (options.cameray * Math.PI) / 180);\n  //       camera.setRotationFromAxisAngle(zAxis, (options.cameraz * Math.PI) / 180);\n  //       camera.setRotationFromAxisAngle(xAxis, (options.camerax * Math.PI) / 180);\n\n  //       // shoulder.setRotationFromAxisAngle(zAxis, options.shoulder * Math.PI / 180);\n  //       // elbow.setRotationFromAxisAngle(zAxis, options.elbow * Math.PI / 180);\n  //       // secondElbow.setRotationFromAxisAngle(zAxis, options.secondElbow * Math.PI / 180);\n  //       // newArm.setRotationFromAxisAngle(zAxis, options.newArm * Math.PI / 180);\n\n  //       // Render\n  //       robot_div.appendChild(gui.domElement);\n  //       renderer.render(scene, camera);\n  //     };\n  //     // console.log(render.domElement);\n  //     // return ;\n  //     show();\n  //   }\n\n  //   main() {\n  //     // var robot_div = document.getElementById(\"robot\");\n  //     // Camera\n  //     // var aspect =\n  //     //   robot_div.parentNode.clientWidth / robot_div.parentNode.clientHeight;\n  //     const canvas = document.getElementById(\"#c\");\n  //     const renderer = new THREE.WebGLRenderer({ canvas });\n\n  //     const cellSize = 256;\n\n  //     const fov = 75;\n  //     const aspect = 2; // the canvas default\n  //     const near = 0.1;\n  //     const far = 1000;\n  //     const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  //     camera.position.set(-cellSize * 0.3, cellSize * 0.8, -cellSize * 0.3);\n\n  //     const controls = new OrbitControls(camera, canvas);\n  //     controls.target.set(cellSize / 2, cellSize / 3, cellSize / 2);\n  //     controls.update();\n\n  //     const scene = new THREE.Scene();\n  //     scene.background = new THREE.Color(\"lightblue\");\n\n  //     {\n  //       const color = 0xffffff;\n  //       const intensity = 1;\n  //       const light = new THREE.DirectionalLight(color, intensity);\n  //       light.position.set(-1, 2, 4);\n  //       scene.add(light);\n  //     }\n  //     let blueprint = [\n  //       [[1, 0, 0], [1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [1, 1, 1]],\n  //       [[1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [1, 1, 0], [0, 0, 0], [1, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [1, 0, 0], [0, 0, 0], [1, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],\n  //       [[1, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n  //     ];\n  //     const geometry = new THREE.BoxBufferGeometry(10, 10, 10);\n  //     const material = new THREE.MeshPhongMaterial({ color: \"green\" });\n\n  //     const cell = new Uint8Array(cellSize * cellSize * cellSize);\n  //     for (let x = 0; x < blueprint.length; ++x) {\n  //       for (let y = 0; y < blueprint[0].length; ++y) {\n  //         for (let z = 0; z < blueprint[0][0].lenth; ++z) {\n  //           //   if (blueprint[x][y][z] === 1) {\n  //           const mesh = new THREE.Mesh(geometry, material);\n  //           mesh.position.set(x, y, z);\n  //           scene.add(mesh);\n  //           //   }\n  //         }\n  //       }\n  //     }\n\n  //     function resizeRendererToDisplaySize(renderer) {\n  //       const canvas = renderer.domElement;\n  //       const width = canvas.clientWidth;\n  //       const height = canvas.clientHeight;\n  //       const needResize = canvas.width !== width || canvas.height !== height;\n  //       if (needResize) {\n  //         renderer.setSize(width, height, false);\n  //       }\n  //       return needResize;\n  //     }\n\n  //     let renderRequested = false;\n\n  //     function show() {\n  //       renderRequested = undefined;\n\n  //       if (resizeRendererToDisplaySize(renderer)) {\n  //         const canvas = renderer.domElement;\n  //         camera.aspect = canvas.clientWidth / canvas.clientHeight;\n  //         camera.updateProjectionMatrix();\n  //       }\n\n  //       controls.update();\n  //       renderer.render(scene, camera);\n  //     }\n  //     show();\n\n  //     function requestRenderIfNotRequested() {\n  //       if (!renderRequested) {\n  //         renderRequested = true;\n  //         requestAnimationFrame(show);\n  //       }\n  //     }\n\n  //     controls.addEventListener(\"change\", requestRenderIfNotRequested);\n  //     window.addEventListener(\"resize\", requestRenderIfNotRequested);\n  //   }\n\n  getVoxels() {\n    let blueprint = [\n      [\n        [1, 0, 0, 0],\n        [1, 0, 0, 0],\n        [1, 0, 0, 0]\n      ],\n      [\n        [1, 0, 0, 0],\n        [1, 0, 0, 0],\n        [1, 0, 0, 0]\n      ],\n      [\n        [1, 0, 0, 0],\n        [1, 0, 0, 0],\n        [1, 0, 0, 0]\n      ],\n      [\n        [1, 0, 0, 0],\n        [1, 1, 0, 0],\n        [1, 1, 1, 1]\n      ],\n      [\n        [1, 0, 0, 0],\n        [1, 1, 1, 0],\n        [1, 1, 1, 1]\n      ],\n      [\n        [1, 0, 0, 0],\n        [1, 1, 1, 1],\n        [1, 1, 1, 1]\n      ]\n    ];\n\n    var voxels = [];\n    var i,\n      j,\n      k = 0;\n    for (i = 0; i < blueprint.length; i++) {\n      for (j = 0; j < blueprint[i].length; j++) {\n        for (k = 0; k < blueprint[i][j].length; k++) {\n          if (blueprint[i][j][k] === 1) {\n            var x = i;\n            var y = -k;\n            var z = j;\n\n            var coordinates = x + \" \" + y + \" \" + z;\n            console.log(\"Coordinates\", coordinates);\n            voxels.push(\n              <voxel\n                key={coordinates}\n                style={{ coordinates: coordinates }}\n                className=\"grass\"\n              />\n            );\n          }\n        }\n      }\n    }\n    return voxels;\n  }\n\n  componentDidMount() {\n    // this.display_robot();\n    // main();\n\n    var voxels = document.querySelectorAll(\"voxel\");\n    console.log(voxels);\n    console.log(\"Should be seeing vocels\");\n    Array.prototype.clean = function(deleteValue) {\n      for (var i = 0; i < this.length; i++) {\n        if (this[i] == deleteValue) {\n          this.splice(i, 1);\n          i--;\n        }\n      }\n      return this;\n    };\n\n    for (var i = 0; i < voxels.length; i++) {\n      var e = voxels[i];\n\n      var c = e.style.coordinates;\n      var translate = \"\";\n      c = c.split(\" \").clean(\"\");\n      console.log(c);\n      for (var j = 0; j < c.length; j++) {\n        var scale = parseInt(c[j]) * 4;\n        console.log(scale);\n        translate = translate + scale + \"em,\";\n      }\n      translate = translate.substring(0, translate.length - 1);\n      e.style.transform = \"translate3d(\" + translate + \")\";\n\n      var t = document.createElement(\"top\");\n      var b = document.createElement(\"bottom\");\n      var l = document.createElement(\"left\");\n      var r = document.createElement(\"right\");\n      var f = document.createElement(\"front\");\n      var ba = document.createElement(\"back\");\n      e.appendChild(t);\n      e.appendChild(b);\n      e.appendChild(l);\n      e.appendChild(r);\n      e.appendChild(f);\n      e.appendChild(ba);\n    }\n  }\n  render() {\n    return (\n      // <div id=\"block\">\n      //   <canvas id=\"#c\" width=\"1000\" height=\"1000\"></canvas>\n      // </div>\n\n      <figure id=\"blueprint_figure\">\n        {/* <voxel style={{ coordinates: \"1 0 1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 2 0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 1 0\" }} /> */}\n        {this.getVoxels()}\n        {/* <voxel style={{ coordinates: \"-3 0 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 0 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 1 -3\" }} />\n        <voxel style={{ coordinates: \"-3 1 -2\" }} />\n        <voxel style={{ coordinates: \"-3 2 -3\" }} />\n        <voxel style={{ coordinates: \"-3 2 -2\" }} />\n        <voxel style={{ coordinates: \"-3 3 -3\" }} />\n        <voxel style={{ coordinates: \"-3 3 -2\" }} />\n        <voxel style={{ coordinates: \"-3 4 -3\" }} />\n        <voxel style={{ coordinates: \"-3 4 -2\" }} />\n        <voxel style={{ coordinates: \"-3 5 -3\" }} />\n        <voxel style={{ coordinates: \"-3 5 -2\" }} />\n        <voxel style={{ coordinates: \"-3 1 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 1  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 2 -1\" }} />\n        <voxel style={{ coordinates: \"-3 2  0\" }} />\n        <voxel style={{ coordinates: \"-3 3 -1\" }} />\n        <voxel style={{ coordinates: \"-3 3  0\" }} />\n        <voxel style={{ coordinates: \"-3 4 -1\" }} />\n        <voxel style={{ coordinates: \"-3 4  0\" }} />\n        <voxel style={{ coordinates: \"-3 5 -1\" }} />\n        <voxel style={{ coordinates: \"-3 5  0\" }} />\n        <voxel style={{ coordinates: \"-3 2  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 2  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 2  3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-3 3  1\" }} />\n        <voxel style={{ coordinates: \"-3 3  2\" }} />\n        <voxel style={{ coordinates: \"-3 3  3\" }} />\n        <voxel style={{ coordinates: \"-3 4  1\" }} />\n        <voxel style={{ coordinates: \"-3 4  2\" }} />\n        <voxel style={{ coordinates: \"-3 4  3\" }} />\n        <voxel style={{ coordinates: \"-3 5  1\" }} />\n        <voxel style={{ coordinates: \"-3 5  2\" }} />\n        <voxel style={{ coordinates: \"-3 5  3\" }} />\n        <voxel style={{ coordinates: \"-2 0 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 1 -3\" }} />\n        <voxel style={{ coordinates: \"-2 2 -3\" }} />\n        <voxel style={{ coordinates: \"-2 3 -3\" }} />\n        <voxel style={{ coordinates: \"-2 4 -3\" }} />\n        <voxel style={{ coordinates: \"-2 5 -3\" }} />\n        <voxel style={{ coordinates: \"-2 1 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 1 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 2  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 3  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 3  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 2  3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-2 3  3\" }} />\n        <voxel style={{ coordinates: \"-2 4  3\" }} />\n        <voxel style={{ coordinates: \"-2 5  3\" }} />\n        <voxel style={{ coordinates: \"-1 1 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 2 -3\" }} />\n        <voxel style={{ coordinates: \"-1 3 -3\" }} />\n        <voxel style={{ coordinates: \"-1 4 -3\" }} />\n        <voxel style={{ coordinates: \"-1 5 -3\" }} />\n        <voxel style={{ coordinates: \"-1 1 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 2 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 2  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 3  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 3  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 3  3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"-1 4  3\" }} />\n        <voxel style={{ coordinates: \"-1 5  3\" }} />\n        <voxel style={{ coordinates: \"0 2 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 2 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 3 -3\" }} />\n        <voxel style={{ coordinates: \"0 4 -3\" }} />\n        <voxel style={{ coordinates: \"0 5 -3\" }} />\n        <voxel style={{ coordinates: \"0 3 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 3  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 4  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 4  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 4  3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"0 5  3\" }} />\n        <voxel style={{ coordinates: \"1 3 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"1 4 -3\" }} />\n        <voxel style={{ coordinates: \"1 5 -3\" }} />\n        <voxel style={{ coordinates: \"1 3 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"1 3 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"1 4  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"1 5  0\" }} />\n        <voxel style={{ coordinates: \"1 5  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"1 5  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"1 5  3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 4 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 5 -3\" }} />\n        <voxel style={{ coordinates: \"2 4 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 4 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 5  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 5  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 5  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"2 5  3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 4 -3\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 5 -3\" }} />\n        <voxel style={{ coordinates: \"3 4 -2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 5 -2\" }} />\n        <voxel style={{ coordinates: \"3 5 -1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 5  0\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 5  1\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 5  2\" }} className=\"grass\" />\n        <voxel style={{ coordinates: \"3 5  3\" }} className=\"grass\" /> */}\n      </figure>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { Container, Nav } from \"./styled-components\";\n\n// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Maps from \"fusioncharts/fusioncharts.maps\";\nimport USARegion from \"fusionmaps/maps/es/fusioncharts.usaregion\";\nimport ReactFC from \"react-fusioncharts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\n\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport \"./charts-theme\";\n\nimport config from \"./config\";\nimport Dropdown from \"react-dropdown\";\nimport formatNum from \"./format-number\";\nimport Robot from \"./Robot\";\nimport Gauge from \"./Gauge\";\nimport UserImg from \"../assets/images/user-img-placeholder.jpeg\";\nimport Console from \"./Console\";\nimport BlockSimulation from \"./BlockSimulation\";\nimport Pusher from \"pusher-js\";\n\nReactFC.fcRoot(FusionCharts, Charts, Maps, USARegion, Widgets);\n\nCharts(FusionCharts);\n\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"b19a4591cdd9ad1d70f7\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nvar channel = pusher.subscribe(\"homeblock\");\n\nexport default class HomeBlockDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robot_count: 100,\n      dimensions: \"(0, 0, 0)\",\n      blocks_to_place: 23,\n      blueprint_id: \"Temple\"\n    };\n  }\n\n  getImageSource = label => {\n    switch (label) {\n      case \"EmpireStateBuilding\":\n        return require(\"../assets/images/EmpireStateBuilding.png\");\n      case \"Temple\":\n        return require(\"../assets/images/Temple.png\");\n      case \"TajMahal\":\n        return require(\"../assets/images/TajMahal.png\");\n      case \"Colosseum\":\n        return require(\"../assets/images/Colosseum.png\");\n      case \"Cube_10x10x10\":\n        return require(\"../assets/images/Cube_10x10x10.png\");\n      case \"Playground\":\n        return require(\"../assets/images/Playground.png\");\n      case \"StarTrek\":\n        return require(\"../assets/images/StarTrek.png\");\n      default:\n        return require(\"../assets/images/TajMahal.png\");\n    }\n  };\n  componentDidMount() {\n    channel.bind(\"state\", data => {\n      console.log(data);\n      this.setState({\n        robot_count: data[\"robot_count\"],\n        dimensions: data[\"building_dimensions\"],\n        blocks_to_place: data[\"blocks_to_place\"],\n        blueprint_id: data[\"blueprint\"]\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          {/* row 1 - revenue */}\n          <Container className=\"row full-height\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Connection Status\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-wifi text-large logo-adjust\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {\"CONNECTED\"}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot Count\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"far fa-compass text-large\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.robot_count}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Dimensions\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-map-marked-alt\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.dimensions}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Blocks To Place\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-map-marked-alt\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.blocks_to_place}\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 5 - orders trend */}\n\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-12 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height blueprint_card is-dark-text-light\">\n                  Blueprint: {this.blueprint_id}\n                  {/* <div id=\"robot\"></div> */}\n                  {/* <BlockSimulation className=\"blueprint_card\" /> */}\n                  <Container className=\"card-value pt-4 text-x-large\">\n                    <img\n                      className=\"center\"\n                      src={this.getImageSource(this.state.blueprint_id)}\n                    />\n                  </Container>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* {Row 6} */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            {/* <Container className=\"col-md-6 mb-4\"> */}\n            <Container className=\"is-card-dark chart-card\">\n              <Container className=\" large full-height scrollable\">\n                <Console />\n              </Container>\n              {/* </Container> */}\n            </Container>\n          </Container>\n        </Container>\n\n        {/* content area end */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Nav } from \"./styled-components\";\n\n// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Maps from \"fusioncharts/fusioncharts.maps\";\nimport USARegion from \"fusionmaps/maps/es/fusioncharts.usaregion\";\nimport ReactFC from \"react-fusioncharts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\n\nimport Zoomline from \"fusioncharts/fusioncharts.zoomline\";\nimport \"./charts-theme\";\n\nimport config from \"./config\";\nimport Dropdown from \"react-dropdown\";\nimport formatNum from \"./format-number\";\nimport Robot from \"./Robot\";\nimport Gauge from \"./Gauge\";\nimport UserImg from \"../assets/images/user-img-placeholder.jpeg\";\nimport Console from \"./Console\";\nimport RobotDashboard from \"./RobotDashboard\";\nimport HomeBlockDashboard from \"./HomeBlockDashboard\";\nimport Pusher from \"pusher-js\";\n\nReactFC.fcRoot(FusionCharts, Charts, Maps, USARegion, Widgets);\n\nCharts(FusionCharts);\n\n// const url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"b19a4591cdd9ad1d70f7\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nvar channel = pusher.subscribe(\"robot\");\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOptions: [],\n      selectedValue: \"Select robot\",\n      display: \"robot\"\n    };\n  }\n\n  updateDashboard = event => {\n    // this.getData(event.value);\n    this.setState({ selectedValue: event.value });\n  };\n\n  componentDidMount() {\n    channel.bind(\"state\", data => {\n      // alert(JSON.stringify(data));\n      if (data[\"id\"] in this.state.dropdownOptions) {\n        // if (this.state.selectedValue === data[\"id\"]) {\n        //   this.setState({\n        //     connection_status: \"CONNECTED\",\n        //     position: data[\"position\"],\n        //     id: data[\"id\"],\n        //     angles: data[\"angles\"]\n        //   });\n        // }\n      } else {\n        let new_dropdown_options = this.state.dropdownOptions;\n        // console.log(this.state.dropdownOptions);\n        // console.log(data[\"id\"]);\n        new_dropdown_options.push(data[\"id\"]);\n        this.setState({ dropdownOptions: [...new Set(new_dropdown_options)] });\n      }\n    });\n    // fetch(url)\n    //   .then(response => response.json())\n    //   .then(data => {\n    //     let batchRowValues = data.valueRanges[0].values;\n\n    //     const rows = [];\n    //     for (let i = 1; i < batchRowValues.length; i++) {\n    //       let rowObject = {};\n    //       for (let j = 0; j < batchRowValues[i].length; j++) {\n    //         rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n    //       }\n    //       rows.push(rowObject);\n    //     }\n\n    //     // dropdown options\n    //     // let dropdownOptions = [];\n\n    //     // for (let i = 0; i < rows.length; i++) {\n    //     //   dropdownOptions.push(i);\n    //     // }\n\n    //     // dropdownOptions = Array.from(new Set(dropdownOptions));\n\n    //     this.setState(\n    //       {\n    //         items: rows\n    //         // dropdownOptions: dropdownOptions,\n    //         // selectedValue: \"0\"\n    //       },\n    //       () => this.getData(\"Jan 2019\")\n    //     );\n    //   });\n  }\n\n  showDashboard = () => {\n    if (this.state.display === \"robot\") {\n      return <RobotDashboard robot_id={this.state.selectedValue} />;\n    } else {\n      return <HomeBlockDashboard />;\n\n      // return <RobotDashboard robot_id={this.state.selectedValue} />;\n    }\n  };\n\n  changeDashboard = () => {\n    if (this.state.display === \"robot\") {\n      this.setState({ display: \"homeblock\" });\n    } else {\n      this.setState({ display: \"robot\" });\n    }\n  };\n\n  showDropdown = () => {\n    if (this.state.display === \"robot\") {\n      return (\n        <Container className=\"navbar-nav ml-auto\">\n          <Dropdown\n            className=\"pr-2 custom-dropdown\"\n            options={this.state.dropdownOptions}\n            onChange={this.updateDashboard}\n            value={\"Robot ID:   \" + this.state.selectedValue}\n            placeholder=\"Select an option\"\n          />\n        </Container>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        {/* static navbar - top */}\n        <Nav className=\"navbar navbar-expand-lg fixed-top is-white is-dark-text\">\n          <Container className=\"navbar-brand h1 mb-0 text-large font-medium\">\n            Smart Scaffolding\n          </Container>\n          <Container className=\"navbar-nav ml-auto\">\n            <Container className=\"user-detail-section\">\n              <span className=\"pr-2\">Swarm Construction</span>\n              {/* <span className=\"img-container\">\n                <img src={UserImg} className=\"rounded-circle\" alt=\"user\" />\n              </span> */}\n            </Container>\n          </Container>\n        </Nav>\n\n        {/* static navbar - bottom */}\n        <Nav className=\"navbar fixed-top nav-secondary is-dark is-light-text\">\n          {/* <Container className=\"text-medium\">Dashboard</Container> */}\n          <button\n            class=\"btn btn-primary text-medium\"\n            onClick={this.changeDashboard}\n          >\n            Switch Dashboard\n          </button>\n\n          {this.showDropdown()}\n        </Nav>\n\n        {/* content area start */}\n        {this.showDashboard()}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-dropdown/style.css';\nimport './style.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","window.FusionCharts.register(\"theme\", {\n  name: \"ecommerce\",\n  theme: {\n    base: {\n      chart: {\n        bgAlpha: \"0\",\n        canvasBgAlpha: \"0\",\n        baseFont: \"basefont-regular\",\n        baseFontSize: \"14\",\n        baseFontBold: \"0\",\n        chartBottomMargin: \"0\",\n        chartTopMargin: \"0\",\n        chartLeftMargin: \"0\",\n        chartRightMargin: \"0\",\n        canvasBottomMargin: \"0\",\n        canvasTopMargin: \"0\",\n        canvasRightMargin: \"0\",\n        canvasLeftMargin: \"0\",\n        showBorder: \"0\",\n        showCanvasBorder: \"0\",\n        baseFontColor: \"#ffffff\",\n        captionFontBold: \"0\",\n        captionFontSize: \"14\",\n        subCaptionFontSize: \"14\",\n        tooltipColor: \"#ffffff\",\n        tooltipBgColor: \"#000000\",\n        tooltipBgAlpha: \"60\",\n        tooltipPadding: \"5\",\n        toolTipBorderAlpha: \"10\",\n        toolTipBorderRadius: \"3\",\n        showValues: \"0\",\n        legendBgAlpha: \"0\",\n        legendBorderAlpha: \"0\",\n        legendBorderThickness: \"0\"\n      }\n    },\n\n    bar2d: {\n      chart: {\n        placeValuesInside: \"0\",\n        usePlotGradientColor: \"0\",\n        showAlternateVGridColor: \"0\",\n        chartLeftMargin: \"5\",\n        canvasLeftMargin: \"5\",\n        divLineAlpha: \"10\",\n        divLineColor: \"#ffffff\",\n        captionFontColor: \"#8091ab\",\n        paletteColors: \"#1D91C0\",\n        valuePadding: \"5\",\n        yAxisName: \"Orders\",\n        yAxisNameAlpha: \"50\",\n        yAxisNameFontSize: \"12\",\n        yAxisNamePadding: \"20\",\n        valueFontBold: \"0\",\n        valueFontSize: \"12\",\n        plotToolText: \"<div>$label<br><b>$value orders</b>\",\n        captionAlignment: \"left\",\n        captionPadding: \"20\"\n      }\n    },\n\n    doughnut2d: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        showLabels: \"0\",\n        showValues: \"0\",\n        use3DLighting: \"0\",\n        showPlotBorder: \"0\",\n        defaultCenterLabel: \"75%\",\n        pieRadius: \"45\",\n        doughnutRadius: \"33\",\n        showTooltip: \"0\",\n        enableRotation: \"0\",\n        enableSlicing: \"0\",\n        startingAngle: \"90\"\n      }\n    },\n\n    geo: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        legendScaleLineThickness: \"0\",\n        legendaxisborderalpha: \"0\",\n        legendShadow: \"0\",\n        plotFillAlpha: \"85\",\n        showBorder: \"1\",\n        borderColor: \"#ffffff\",\n        borderThickness: \"0.3\",\n        nullEntityColor: \"#17202e\",\n        nullEntityAlpha: \"50\",\n        entityFillHoverColor: \"#17202e\",\n        captionAlignment: \"left\",\n        entityToolText: \"<div>$lname<br><b>$value orders</b>\",\n        chartLeftMargin: \"40\"\n      }\n    }\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/user-img-placeholder.be2ed151.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/TajMahal.50c4e7e7.png\";"],"sourceRoot":""}