{"version":3,"sources":["assets/images/EmpireStateBuilding.png","assets/images/Temple.png","assets/images/Colosseum.png","assets/images/Cube_10x10x10.png","assets/images/Playground.png","assets/images/StarTrek.png","components/tweet.js","components/Console.js","components/styled-components.js","components/HomeBlockDashboard.js","components/Gauge.js","components/Paraview.js","components/RobotDashboard.js","components/App.js","serviceWorker.js","index.js","components/charts-theme.js","assets/images/TajMahal.png"],"names":["module","exports","__webpack_require__","p","TweetBox","props","react_default","a","createElement","className","children","Image","src","image","alt","Handle","handle","Name","name","Tweet","tweet","TweetBody","tweet_TweetBox","tweet_Image","tweet_Name","tweet_Handle","tweet_Tweet","Console","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","handleRefresh","bind","assertThisInitialized","getUser","_this2","Promise","resolve","_this3","fetch","then","response","ok","json","Error","data","setState","results","email","concat","toConsumableArray","catch","error","console","log","pullDownContent","releaseContent","refreshContent","pullDownThreshold","onRefresh","triggerHeight","backgroundColor","map","user","index","tweet_TweetBody","key","Component","Container","styled","div","_templateObject","Nav","nav","_templateObject2","ReactFC","fcRoot","FusionCharts","Charts","Widgets","Pusher","logToConsole","channel","cluster","forceTLS","subscribe","HomeBlockDashboard","getImageSource","label","require","robot_count","dimensions","blocks_to_place","blueprint_id","style","minHeight","src_components_Console","charts","fusioncharts","Gauge","battery_life","battery","dataSource","chart","caption","lowerlimit","upperlimit","showvalue","numbersuffix","theme","showtooltip","showGaugeBorder","showHoverEffect","colorrange","color","minvalue","maxvalue","code","dials","dial","value","trendpoints","point","startValue","endValue","radius","innerRadius","displayValue","alpha","ReactFC_default","type","width","height","dataFormat","containerBackgroundOpacity","React","Paraview","divRenderer","document","getElementById","position","overflow","smartConnect","SmartConnect","newInstance","config","sessionURL","onConnectionReady","connection","pvwClient","ParaViewWebClient","createClient","renderer","RemoteRenderer","setContainer","onImageReady","window","SizeHelper","onSizeChange","resize","startListening","connect","react","id","Column2D","RobotDashboard","check_alive_status","connection_status","selectBehavior","input","select_behavior","classList","add","last_behavior_id","remove","items","dropdownOptions","selectedValue","angles","gripper_status","blocks_placed","a_link_blocks","d_link_blocks","robot_state","end_effector_velocity","behavior_times","grippers","push","alive","setInterval","behavior","parent","robot_id","clearInterval","d","velocity","length","splice","flat","Infinity","Gauge_Gauge","defaultCenterLabel","paletteColors","dataEmptyMessage","subCaption","yaxisname","yAxisMaxValue","es","labels","datasets","pointLabelFontColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","responsive","maintainAspectRatio","scale","gridLines","pointLabels","fontColor","xAxisName","yAxisName","lineThickness","index_es","lineWidth","lineColor","lineBorderRadius","Paraview_Paraview","Maps","USARegion","App","updateDashboard","event","showDashboard","display","RobotDashboard_RobotDashboard","HomeBlockDashboard_HomeBlockDashboard","changeDashboard","showDropdown","dist_default","onChange","placeholder","new_dropdown_options","Set","class","onClick","Boolean","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister","register","base","bgAlpha","canvasBgAlpha","baseFont","baseFontSize","baseFontBold","chartBottomMargin","chartTopMargin","chartLeftMargin","chartRightMargin","canvasBottomMargin","canvasTopMargin","canvasRightMargin","canvasLeftMargin","showBorder","showCanvasBorder","baseFontColor","captionFontBold","captionFontSize","subCaptionFontSize","tooltipColor","tooltipBgColor","tooltipBgAlpha","tooltipPadding","toolTipBorderAlpha","toolTipBorderRadius","showValues","legendBgAlpha","legendBorderAlpha","legendBorderThickness","bar2d","placeValuesInside","usePlotGradientColor","showAlternateVGridColor","divLineAlpha","divLineColor","captionFontColor","valuePadding","yAxisNameAlpha","yAxisNameFontSize","yAxisNamePadding","valueFontBold","valueFontSize","plotToolText","captionAlignment","captionPadding","doughnut2d","showLabels","use3DLighting","showPlotBorder","pieRadius","doughnutRadius","showTooltip","enableRotation","enableSlicing","startingAngle","geo","legendScaleLineThickness","legendaxisborderalpha","legendShadow","plotFillAlpha","borderThickness","nullEntityColor","nullEntityAlpha","entityFillHoverColor","entityToolText"],"mappings":"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","file":"static/js/main.3142276d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EmpireStateBuilding.ee291595.png\";","module.exports = __webpack_public_path__ + \"static/media/Temple.ad1cdf65.png\";","module.exports = __webpack_public_path__ + \"static/media/Colosseum.3613bb08.png\";","module.exports = __webpack_public_path__ + \"static/media/Cube_10x10x10.4a4a0900.png\";","module.exports = __webpack_public_path__ + \"static/media/Playground.5aa80335.png\";","module.exports = __webpack_public_path__ + \"static/media/StarTrek.69a2c58f.png\";","import React from 'react';\n\nconst TweetBox = (props) => {\n  return(\n    <div className=\"tweet-body\">\n      {props.children}\n    </div>\n  )\n}\n\nconst Image = (props) => {\n  return(\n    <img src={props.image} alt=\"Logo\" className=\"picture\">\n    </img>\n  )\n}\n\nconst Handle = (props) => {\n  return(\n    <div className=\"handle\">\n      {props.handle}\n    </div>\n  )\n}\n\nconst Name = (props) => {\n  return(\n    <div className=\"name\">\n      {props.name}\n    </div>\n  )\n}\n\nconst Tweet = (props) => {\n  return(\n    <div className=\"tweet\">\n      {props.tweet}\n    </div>\n  )\n}\n\nconst TweetBody = (props) => {\n  return(\n    <TweetBox>\n      <div className=\"inner-body\">\n        <Image image={props.image}/>\n        <div className=\"body\">\n          <div className=\"inner-body\">\n            <Name name={props.name}/>\n            <Handle handle={props.handle}/>\n          </div>\n          <Tweet tweet={props.tweet}/>\n        </div>\n      </div>\n    </TweetBox>\n  )\n}\n\nexport { TweetBody }","import React, { Component } from \"react\";\nimport {\n  PullDownContent,\n  PullToRefresh,\n  RefreshContent,\n  ReleaseContent\n} from \"react-js-pull-to-refresh\";\nimport \"./Console.css\";\nimport { TweetBody } from \"./tweet\";\n\nclass Console extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.getUser = this.getUser.bind(this);\n  }\n\n  handleRefresh() {\n    return new Promise(resolve => {\n      this.getUser();\n    });\n  }\n\n  componentWillMount() {\n    this.getUser();\n    this.getUser();\n    this.getUser();\n    this.getUser();\n  }\n\n  getUser() {\n    fetch(\"https://randomuser.me/api/\")\n      .then(response => {\n        if (response.ok) return response.json();\n        throw new Error(\"Request failed.\");\n      })\n      .then(data => {\n        this.setState({\n          users: [\n            {\n              name: data.results[0].name,\n              image: \"\",\n\n              tweet: data.results[0].email\n            },\n            ...this.state.users\n          ]\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <PullToRefresh\n        pullDownContent={<PullDownContent />}\n        releaseContent={<ReleaseContent />}\n        refreshContent={<RefreshContent />}\n        pullDownThreshold={2}\n        onRefresh={this.handleRefresh}\n        triggerHeight={20}\n        backgroundColor=\"black\"\n      >\n        <div className=\"main-body\">\n          {[...this.state.users].map((user, index) => {\n            let name = \"Path Planning\";\n            let handle = \"09:36:47\";\n            let image = user.image;\n            let tweet = \"Searching Through A* Nodes\";\n            console.log(image);\n            return (\n              <TweetBody\n                key={index}\n                name={name}\n                handle={handle}\n                tweet={tweet}\n                image={image}\n              />\n            );\n          })}\n        </div>\n      </PullToRefresh>\n    );\n  }\n}\n\nexport default Console;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Nav = styled.nav``;","// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport Pusher from \"pusher-js\";\nimport React, { Component } from \"react\";\nimport ReactFC from \"react-fusioncharts\";\nimport \"./charts-theme\";\nimport Console from \"./Console\";\nimport { Container } from \"./styled-components\";\n\nReactFC.fcRoot(FusionCharts, Charts, Widgets);\n\nCharts(FusionCharts);\n\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"b19a4591cdd9ad1d70f7\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nvar channel = pusher.subscribe(\"homeblock\");\n\nexport default class HomeBlockDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robot_count: 10,\n      dimensions: \"(0, 0, 0)\",\n      blocks_to_place: 23,\n      blueprint_id: \"Temple\"\n    };\n  }\n\n  getImageSource = label => {\n    switch (label) {\n      case \"EmpireStateBuilding\":\n        return require(\"../assets/images/EmpireStateBuilding.png\");\n      case \"Temple\":\n        return require(\"../assets/images/Temple.png\");\n      case \"TajMahal\":\n        return require(\"../assets/images/TajMahal.png\");\n      case \"Colosseum\":\n        return require(\"../assets/images/Colosseum.png\");\n      case \"Cube_10x10x10\":\n        return require(\"../assets/images/Cube_10x10x10.png\");\n      case \"Playground\":\n        return require(\"../assets/images/Playground.png\");\n      case \"StarTrek\":\n        return require(\"../assets/images/StarTrek.png\");\n      default:\n        return require(\"../assets/images/TajMahal.png\");\n    }\n  };\n  componentDidMount() {\n    channel.bind(\"state\", data => {\n      console.log(data);\n      this.setState({\n        robot_count: data[\"robot_count\"],\n        dimensions: data[\"building_dimensions\"],\n        blocks_to_place: data[\"blocks_to_place\"],\n        blueprint_id: data[\"blueprint\"]\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          {/* row 1 */}\n          <Container className=\"row full-height\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Connection Status\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-wifi text-large logo-adjust\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {\"CONNECTED\"}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot Count\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"far fa-compass text-large\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.robot_count}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Dimensions\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-map-marked-alt\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.dimensions}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Blocks To Place\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-map-marked-alt\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.blocks_to_place}\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 5 */}\n\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-12 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height blueprint_card is-dark-text-light\">\n                  Blueprint: {this.blueprint_id}\n                  <Container className=\"card-value pt-4 text-x-large\">\n                    <img\n                      className=\"center\"\n                      src={this.getImageSource(this.state.blueprint_id)}\n                      alt={\"Blueprint currently being built by robots\"}\n                    />\n                  </Container>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* {Row 6} */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"is-card-dark chart-card\">\n              <Container className=\" large full-height scrollable\">\n                <Console />\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n\n        {/* content area end */}\n      </div>\n    );\n  }\n}\n","import fusioncharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nimport React from \"react\";\nimport ReactFC from \"react-fusioncharts\";\n\n// Resolves charts dependancy\ncharts(fusioncharts);\n\nexport default class Gauge extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      battery_life: 50\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      battery_life: this.props.battery\n    });\n  }\n  render() {\n    const battery_life = this.props.battery;\n    console.log(\"Battery life: \", this.props.battery);\n    var dataSource = {\n      chart: {\n        caption: \"Battery Life\",\n        lowerlimit: \"0\",\n        upperlimit: \"100\",\n        showvalue: \"1\",\n        numbersuffix: \"%\",\n        theme: \"ecommerce\",\n        showtooltip: \"1\",\n        showGaugeBorder: \"0\",\n        showHoverEffect: \"1\"\n      },\n      colorrange: {\n        color: [\n          {\n            minvalue: \"0\",\n            maxvalue: \"50\",\n            code: \"#F2726F\"\n          },\n          {\n            minvalue: \"50\",\n            maxvalue: \"75\",\n            code: \"#FFC533\"\n          },\n          {\n            minvalue: \"75\",\n            maxvalue: \"100\",\n            code: \"#62B58F\"\n          }\n        ]\n      },\n      dials: {\n        dial: [\n          {\n            value: battery_life\n          }\n        ]\n      },\n      trendpoints: {\n        point: [\n          {\n            startValue: \"60\",\n            endValue: \"100\",\n            radius: \"100\",\n            innerRadius: \"5\",\n            displayValue: \"Safe\",\n            color: \"#0075c2\",\n            alpha: \"40\"\n          }\n        ]\n      }\n    };\n\n    console.log(dataSource);\n    return (\n      <ReactFC\n        type=\"angulargauge\"\n        width=\"100%\"\n        height=\"100%\"\n        dataFormat=\"json\"\n        containerBackgroundOpacity=\"0\"\n        dataSource={dataSource}\n      />\n    );\n  }\n}\n","import \"normalize.css\";\nimport SizeHelper from \"paraviewweb/src/Common/Misc/SizeHelper\";\nimport ParaViewWebClient from \"paraviewweb/src/IO/WebSocket/ParaViewWebClient\";\nimport RemoteRenderer from \"paraviewweb/src/NativeUI/Canvas/RemoteRenderer\";\nimport * as React from \"react\";\nimport SmartConnect from \"wslink/src/SmartConnect\";\n\nexport default class Paraview extends React.Component {\n  componentDidMount() {\n    const divRenderer = document.getElementById(\"paraview_div\");\n    divRenderer.style.position = \"relative\";\n    divRenderer.style.width = \"100vw\";\n    divRenderer.style.height = \"100vh\";\n    divRenderer.style.overflow = \"hidden\";\n    const config = { sessionURL: \"ws://localhost:1234/ws\" };\n    const smartConnect = SmartConnect.newInstance({ config });\n    smartConnect.onConnectionReady(connection => {\n      const pvwClient = ParaViewWebClient.createClient(connection, [\n        \"MouseHandler\",\n        \"ViewPort\",\n        \"ViewPortImageDelivery\"\n      ]);\n      const renderer = new RemoteRenderer(pvwClient);\n      renderer.setContainer(divRenderer);\n      renderer.onImageReady(() => {\n        console.log(\"We are good\");\n      });\n      window.renderer = renderer;\n      SizeHelper.onSizeChange(() => {\n        renderer.resize();\n      });\n      SizeHelper.startListening();\n    });\n    smartConnect.connect();\n  }\n  render() {\n    return <div id=\"paraview_div\" />;\n  }\n}\n","// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport {\n  default as Charts,\n  default as Column2D\n} from \"fusioncharts/fusioncharts.charts\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport Pusher from \"pusher-js\";\nimport React, { Component } from \"react\";\nimport { Radar } from \"react-chartjs-2\";\nimport ReactFC from \"react-fusioncharts\";\nimport { Tree, TreeNode } from \"react-organizational-chart\";\nimport \"./charts-theme\";\nimport Console from \"./Console\";\nimport Gauge from \"./Gauge\";\nimport Paraview from \"./Paraview\";\nimport { Container } from \"./styled-components\";\n\nReactFC.fcRoot(FusionCharts, Charts, Widgets, Column2D);\n\nCharts(FusionCharts);\n\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"b19a4591cdd9ad1d70f7\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nvar channel = pusher.subscribe(\"robot\");\n\nexport default class RobotDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOptions: [],\n      selectedValue: null,\n      position: [0, 0, 0],\n      angles: [20, 20, 20],\n      id: \"ROBOT\",\n      connection_status: \"OFFLINE\",\n      gripper_status: [0, 100],\n      battery_life: 30,\n      blocks_placed: 0,\n      a_link_blocks: 0,\n      d_link_blocks: 0,\n      robot_state: \"WAITING\",\n      end_effector_velocity: [\n        { label: 0, value: 0 },\n        { label: 1, value: 2 },\n        { label: 2, value: 4 },\n        { label: 3, value: 5 },\n        { label: 4, value: 4 },\n        { label: 5, value: 4 },\n        { label: 6, value: 2 },\n        { label: 7, value: 0 }\n      ],\n      last_behavior_id: \"behavior_root\",\n      behavior_times: [28, 48, 40, 300, 96]\n    };\n  }\n\n  check_alive_status = () => {\n    this.setState({ connection_status: \"OFFLINE\" });\n  };\n\n  selectBehavior = input => {\n    let select_behavior = \"\";\n    switch (input) {\n      case \"wait\":\n        select_behavior = \"behavior_wait\";\n        break;\n      case \"update\":\n        select_behavior = \"behavior_update\";\n        break;\n\n      case \"build\":\n        select_behavior = \"behavior_build\";\n        break;\n\n      case \"build_MoveToBlockToRemove\":\n        select_behavior = \"behavior_build_nav_one\";\n        break;\n\n      case \"build_RemoveBlock\":\n        select_behavior = \"behavior_build_remove\";\n        break;\n      case \"build_MoveToPlaceBlock\":\n        select_behavior = \"behavior_build_nav_two\";\n        break;\n      case \"build_PlaceBlock\":\n        select_behavior = \"behavior_build_place\";\n        break;\n\n      case \"ferry\":\n        select_behavior = \"behavior_ferry\";\n        break;\n\n      case \"ferry_MoveToBlockToRemove\":\n        select_behavior = \"behavior_ferry_nav_one\";\n        break;\n\n      case \"ferry_RemoveBlock\":\n        select_behavior = \"behavior_ferry_remove\";\n        break;\n      case \"ferry_MoveToPlaceBlock\":\n        select_behavior = \"behavior_ferry_nav_two\";\n        break;\n      case \"ferry_PlaceBlock\":\n        select_behavior = \"behavior_ferry_place\";\n        break;\n\n      case \"root\":\n      default:\n        select_behavior = \"behavior_root\";\n        break;\n    }\n    document.getElementById(select_behavior).classList.add(\"selected_behavior\");\n\n    document\n      .getElementById(this.state.last_behavior_id)\n      .classList.remove(\"selected_behavior\");\n\n    this.setState({ last_behavior_id: select_behavior });\n  };\n  componentDidMount() {\n    let grippers = [];\n    grippers.push({\n      label: \"A Gripper\",\n      value: 0,\n      displayValue: `${0}`\n    });\n    grippers.push({\n      label: \"D Gripper\",\n      value: 100,\n      displayValue: `${0}`\n    });\n    this.setState({\n      gripper_status: grippers\n    });\n    this.alive = setInterval(this.check_alive_status, 15000);\n\n    channel.bind(\"behavior_tree\", data => {\n      console.log(data);\n      var behavior = data[\"behavior\"];\n      var parent = data[\"parent\"];\n      console.log(parent);\n      if (this.props.robot_id === data[\"id\"]) {\n        if (parent == null) {\n          this.selectBehavior(behavior);\n          console.log(\"Parent is not there\");\n        } else {\n          this.selectBehavior(parent + \"_\" + behavior);\n        }\n      }\n    });\n\n    channel.bind(\"behavior_time\", data => {\n      console.log(data);\n      console.log(this.props.robot_id);\n      console.log(data[\"id\"]);\n      if (this.props.robot_id === data[\"id\"]) {\n        this.setState({\n          behavior_times: [\n            data[\"wait\"],\n            data[\"update\"],\n            data[\"move\"],\n            data[\"ferry\"],\n            data[\"build\"]\n          ]\n        });\n      }\n    });\n\n    channel.bind(\"behavior\", data => {\n      this.selectBehavior(data[\"behavior\"]);\n    });\n    channel.bind(\"state\", data => {\n      // alert(JSON.stringify(data));\n      clearInterval(this.alive);\n      this.alive = setInterval(this.check_alive_status, 15000);\n\n      // if (data[\"id\"] in this.state.dropdownOptions) {\n      if (this.props.robot_id === data[\"id\"]) {\n        let grippers = [];\n        grippers.push({\n          label: \"A Gripper\",\n          value: data[\"grippers\"].a,\n          displayValue: `A Gripper: ${data[\"grippers\"].a}`\n        });\n        grippers.push({\n          label: \"D Gripper\",\n          value: data[\"grippers\"].d,\n          displayValue: `${data[\"grippers\"].d}`\n        });\n\n        let velocity = this.state.end_effector_velocity;\n        if (velocity.length > 7) {\n          velocity.splice(0, 1);\n        }\n        velocity.push(data[\"end_effector_velocity\"]);\n        velocity.flat(Infinity);\n        this.setState({\n          connection_status: \"CONNECTED\",\n          position: data[\"position\"],\n          id: data[\"id\"],\n          angles: data[\"angles\"],\n          gripper_status: grippers,\n          battery_life: data[\"battery\"],\n          blocks_placed: data[\"blocks_placed\"],\n          a_link_blocks: data[\"a_link_blocks\"],\n          d_link_blocks: data[\"d_link_blocks\"],\n          robot_state: data[\"robot_state\"],\n          end_effector_velocity: velocity\n        });\n      }\n    });\n  }\n\n  render() {\n    console.log(\"EE Velocity: \", this.state.end_effector_velocity);\n    return (\n      <div>\n        <Container className=\"container-fluid pr-5 pl-5 pt-5 pb-5\">\n          <Container className=\"row full-height\">\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Connection Status\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-wifi text-large logo-adjust\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.connection_status}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot Orientation\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"far fa-compass text-large\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large \">\n                  {\"HORIZONTAL\"}\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot Position\n                  </Container>\n                  <Container className=\"card-heading-brand\">\n                    <i className=\"fas fa-map-marked-alt\" />\n                  </Container>\n                </Container>\n\n                <Container className=\"card-value pt-4 text-x-large\">\n                  ({this.state.position[0]}, {this.state.position[1]},{\" \"}\n                  {this.state.position[2]})\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-lg-3 col-sm-6 is-light-text mb-4\">\n              <Container className=\"card chart-card is-card-dark\">\n                <Container className=\"chart-container full-height\">\n                  <Gauge battery={this.state.battery_life} />\n                </Container>\n                {/* </Container> */}\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 2  */}\n          <Container className=\"row\">\n            <Container className=\"col-md-4 col-lg-3 is-light-text mb-4\">\n              <Container className=\"card grid-card is-card-dark\">\n                <Container className=\"card-heading mb-3\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Blocks Placed\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-4 text-x-large\">\n                  {this.state.blocks_placed}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    blocks\n                  </span>\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-8 col-lg-9 is-light-text mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"row full-height\">\n                  <Container className=\"col-sm-4 full height\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Joint 1\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.angles[0]}º`,\n                              paletteColors: \"#3B70C4, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.angles[0]}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${360 - this.state.angles[0]}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                  <Container className=\"col-sm-4 full-height border-left border-right\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Joint 2\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.angles[1]}º`,\n                              paletteColors: \"#41B6C4, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.angles[1]}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${360 - this.state.angles[1]}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                  <Container className=\"col-sm-4 full-height\">\n                    <Container className=\"chart-container full-height\">\n                      <ReactFC\n                        {...{\n                          type: \"doughnut2d\",\n                          width: \"100%\",\n                          height: \"100%\",\n                          dataFormat: \"json\",\n                          containerBackgroundOpacity: \"0\",\n                          dataSource: {\n                            chart: {\n                              caption: \"Joint 3\",\n                              theme: \"ecommerce\",\n                              defaultCenterLabel: `${this.state.angles[2]}º`,\n                              paletteColors: \"#EDF8B1, #000000\"\n                            },\n                            data: [\n                              {\n                                label: \"active\",\n                                value: `${this.state.angles[2]}`\n                              },\n                              {\n                                label: \"inactive\",\n                                alpha: 5,\n                                value: `${360 - this.state.angles[2]}`\n                              }\n                            ]\n                          }\n                        }}\n                      />\n                    </Container>\n                  </Container>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 3 */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"bar2d\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataEmptyMessage: \"Loading Data...\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"% Closed\",\n                          subCaption: \"Grippers\",\n                          yaxisname: \"Percent closed\",\n                          yAxisMaxValue: \"100\"\n                        },\n                        data: this.state.gripper_status\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card grid-card is-light-text mb-4 is-card-dark\">\n                <Container className=\"card-heading mb-3\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    Robot State:\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-1 text-x-large\">\n                  {this.state.robot_state}\n                </Container>\n                <Container className=\"card-heading mb-3 pt-5\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    A Link Number Blocks\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-1 text-x-large\">\n                  {this.state.a_link_blocks}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    block(s)\n                  </span>\n                </Container>\n                <Container className=\"card-heading mb-3 pt-5\">\n                  <Container className=\"is-dark-text-light letter-spacing text-small\">\n                    D Link Number Blocks\n                  </Container>\n                </Container>\n                <Container className=\"card-value pt-1 text-x-large\">\n                  {this.state.d_link_blocks}\n                  <span className=\"text-medium pl-2 is-dark-text-light\">\n                    block(s)\n                  </span>\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* row 5 */}\n\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height is-dark-text-light\">\n                  Robot Behavior Time\n                  <Radar\n                    height={1}\n                    width={1}\n                    data={{\n                      labels: [\"Wait\", \"Update\", \"Move\", \"Ferry\", \"Build\"],\n                      datasets: [\n                        {\n                          label: \"Behavior Time (seconds)\",\n                          pointLabelFontColor: \"white\",\n                          backgroundColor: \"rgba(59, 112, 196, 0.2)\",\n                          borderColor: \"#3B70C4\",\n                          pointBackgroundColor: \"#fff\",\n                          pointBorderColor: \"#fff\",\n                          pointHoverBackgroundColor: \"#fff\",\n                          pointHoverBorderColor: \"rgba(59, 112, 196, 0.2)\",\n                          data: this.state.behavior_times\n                        }\n                      ]\n                    }}\n                    options={{\n                      responsive: true,\n                      maintainAspectRatio: true,\n                      scale: {\n                        gridLines: {\n                          color: [\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\",\n                            \"rgb(128, 145, 171, 0.2)\"\n                          ]\n                        },\n                        pointLabels: {\n                          fontColor: \"white\"\n                        }\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n\n            <Container className=\"col-md-6 mb-4\">\n              <Container className=\"card is-card-dark chart-card\">\n                <Container className=\"chart-container large full-height\">\n                  <ReactFC\n                    {...{\n                      type: \"line\",\n                      width: \"100%\",\n                      height: \"100%\",\n                      dataFormat: \"json\",\n                      containerBackgroundOpacity: \"0\",\n                      dataSource: {\n                        chart: {\n                          theme: \"ecommerce\",\n                          caption: \"End Effector Velocity (norm)\",\n                          xAxisName: \"Timestamp\",\n                          yAxisName: \"Velocity (m/s)\",\n                          lineThickness: \"2\",\n                          paletteColors: \"#3B70C4, #000000\"\n                        },\n                        data: this.state.end_effector_velocity\n                      }\n                    }}\n                  />\n                </Container>\n              </Container>\n            </Container>\n          </Container>\n\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"is-card-dark chart-card scrollable-x\">\n              <Container className=\" large full-height scrollable-x behavior_container\">\n                <Tree\n                  lineWidth={\"2px\"}\n                  lineColor={\"white\"}\n                  lineBorderRadius={\"10px\"}\n                  label={\n                    <div\n                      id=\"behavior_root\"\n                      className=\"behavior behavior_extra selected_behavior\"\n                    >\n                      Root\n                    </div>\n                  }\n                >\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_update\" className=\"behavior\">\n                        Update\n                      </div>\n                    }\n                  />\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_build\" className=\"behavior\">\n                        Build\n                      </div>\n                    }\n                  >\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_nav_one\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_remove\" className=\"behavior\">\n                          Remove Block\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_nav_two\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_build_place\" className=\"behavior\">\n                          Place Block\n                        </div>\n                      }\n                    />\n                  </TreeNode>\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_ferry\" className=\"behavior\">\n                        Ferry\n                      </div>\n                    }\n                  >\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_nav_one\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_remove\" className=\"behavior\">\n                          Remove Block\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_nav_two\" className=\"behavior\">\n                          Navigate To Point\n                        </div>\n                      }\n                    />\n                    <TreeNode\n                      label={\n                        <div id=\"behavior_ferry_place\" className=\"behavior\">\n                          Place Block\n                        </div>\n                      }\n                    />\n                  </TreeNode>\n                  <TreeNode\n                    label={\n                      <div id=\"behavior_wait\" className=\"behavior\">\n                        Wait\n                      </div>\n                    }\n                  />\n                </Tree>\n              </Container>\n            </Container>\n          </Container>\n\n          {/* {Row 6} */}\n          <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n            <Container className=\"is-card-dark chart-card\">\n              <Container className=\" large full-height scrollable\">\n                <Console />\n              </Container>\n            </Container>\n          </Container>\n        </Container>\n        <Container className=\"row\" style={{ minHeight: \"400px\" }}>\n          <Paraview />\n        </Container>\n\n        {/* content area end */}\n      </div>\n    );\n  }\n}\n","// fusioncharts\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport Maps from \"fusioncharts/fusioncharts.maps\";\nimport Widgets from \"fusioncharts/fusioncharts.widgets\";\nimport USARegion from \"fusionmaps/maps/es/fusioncharts.usaregion\";\nimport Pusher from \"pusher-js\";\nimport React, { Component } from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport ReactFC from \"react-fusioncharts\";\nimport \"./charts-theme\";\nimport HomeBlockDashboard from \"./HomeBlockDashboard\";\nimport RobotDashboard from \"./RobotDashboard\";\nimport { Container, Nav } from \"./styled-components\";\n\nReactFC.fcRoot(FusionCharts, Charts, Maps, USARegion, Widgets);\n\nCharts(FusionCharts);\n\nPusher.logToConsole = true;\n\nvar pusher = new Pusher(\"b19a4591cdd9ad1d70f7\", {\n  cluster: \"us2\",\n  forceTLS: true\n});\n\nvar channel = pusher.subscribe(\"robot\");\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      dropdownOptions: [],\n      selectedValue: \"Select robot\",\n      display: \"robot\"\n    };\n  }\n\n  updateDashboard = event => {\n    // this.getData(event.value);\n    this.setState({ selectedValue: event.value });\n  };\n\n  componentDidMount() {\n    channel.bind(\"state\", data => {\n      // alert(JSON.stringify(data));\n      if (data[\"id\"] in this.state.dropdownOptions) {\n      } else {\n        let new_dropdown_options = this.state.dropdownOptions;\n        new_dropdown_options.push(data[\"id\"]);\n        this.setState({ dropdownOptions: [...new Set(new_dropdown_options)] });\n      }\n    });\n  }\n\n  showDashboard = () => {\n    if (this.state.display === \"robot\") {\n      return <RobotDashboard robot_id={this.state.selectedValue} />;\n    } else {\n      return <HomeBlockDashboard />;\n    }\n  };\n\n  changeDashboard = () => {\n    if (this.state.display === \"robot\") {\n      this.setState({ display: \"homeblock\" });\n    } else {\n      this.setState({ display: \"robot\" });\n    }\n  };\n\n  showDropdown = () => {\n    if (this.state.display === \"robot\") {\n      return (\n        <Container className=\"navbar-nav ml-auto\">\n          <Dropdown\n            className=\"pr-2 custom-dropdown\"\n            options={this.state.dropdownOptions}\n            onChange={this.updateDashboard}\n            value={\"Robot ID:   \" + this.state.selectedValue}\n            placeholder=\"Select an option\"\n          />\n        </Container>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Nav className=\"navbar navbar-expand-lg fixed-top is-white is-dark-text\">\n          <Container className=\"navbar-brand h1 mb-0 text-large font-medium\">\n            Smart Scaffolding\n          </Container>\n          <Container className=\"navbar-nav ml-auto\">\n            <Container className=\"user-detail-section\">\n              <span className=\"pr-2\">Swarm Construction</span>\n            </Container>\n          </Container>\n        </Nav>\n\n        <Nav className=\"navbar fixed-top nav-secondary is-dark is-light-text\">\n          <button\n            class=\"btn btn-primary text-medium\"\n            onClick={this.changeDashboard}\n          >\n            Switch Dashboard\n          </button>\n\n          {this.showDropdown()}\n        </Nav>\n\n        {this.showDashboard()}\n        <div className=\"is-light-text h4 navbar\">Made by Caleb Wagner</div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-dropdown/style.css';\nimport './style.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","window.FusionCharts.register(\"theme\", {\n  name: \"ecommerce\",\n  theme: {\n    base: {\n      chart: {\n        bgAlpha: \"0\",\n        canvasBgAlpha: \"0\",\n        baseFont: \"basefont-regular\",\n        baseFontSize: \"14\",\n        baseFontBold: \"0\",\n        chartBottomMargin: \"0\",\n        chartTopMargin: \"0\",\n        chartLeftMargin: \"0\",\n        chartRightMargin: \"0\",\n        canvasBottomMargin: \"0\",\n        canvasTopMargin: \"0\",\n        canvasRightMargin: \"0\",\n        canvasLeftMargin: \"0\",\n        showBorder: \"0\",\n        showCanvasBorder: \"0\",\n        baseFontColor: \"#ffffff\",\n        captionFontBold: \"0\",\n        captionFontSize: \"14\",\n        subCaptionFontSize: \"14\",\n        tooltipColor: \"#ffffff\",\n        tooltipBgColor: \"#000000\",\n        tooltipBgAlpha: \"60\",\n        tooltipPadding: \"5\",\n        toolTipBorderAlpha: \"10\",\n        toolTipBorderRadius: \"3\",\n        showValues: \"0\",\n        legendBgAlpha: \"0\",\n        legendBorderAlpha: \"0\",\n        legendBorderThickness: \"0\"\n      }\n    },\n\n    bar2d: {\n      chart: {\n        placeValuesInside: \"0\",\n        usePlotGradientColor: \"0\",\n        showAlternateVGridColor: \"0\",\n        chartLeftMargin: \"5\",\n        canvasLeftMargin: \"5\",\n        divLineAlpha: \"10\",\n        divLineColor: \"#ffffff\",\n        captionFontColor: \"#8091ab\",\n        paletteColors: \"#1D91C0\",\n        valuePadding: \"5\",\n        yAxisNameAlpha: \"50\",\n        yAxisNameFontSize: \"12\",\n        yAxisNamePadding: \"20\",\n        valueFontBold: \"0\",\n        valueFontSize: \"12\",\n        plotToolText: \"<div>$label<br><b>$value%</b>\",\n        captionAlignment: \"left\",\n        captionPadding: \"20\"\n      }\n    },\n\n    doughnut2d: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        showLabels: \"0\",\n        showValues: \"0\",\n        use3DLighting: \"0\",\n        showPlotBorder: \"0\",\n        defaultCenterLabel: \"75%\",\n        pieRadius: \"45\",\n        doughnutRadius: \"33\",\n        showTooltip: \"0\",\n        enableRotation: \"0\",\n        enableSlicing: \"0\",\n        startingAngle: \"90\"\n      }\n    },\n\n    geo: {\n      chart: {\n        captionFontSize: \"14\",\n        captionFontColor: \"#8091ab\",\n        legendScaleLineThickness: \"0\",\n        legendaxisborderalpha: \"0\",\n        legendShadow: \"0\",\n        plotFillAlpha: \"85\",\n        showBorder: \"1\",\n        borderColor: \"#ffffff\",\n        borderThickness: \"0.3\",\n        nullEntityColor: \"#17202e\",\n        nullEntityAlpha: \"50\",\n        entityFillHoverColor: \"#17202e\",\n        captionAlignment: \"left\",\n        entityToolText: \"<div>$lname<br><b>$value orders</b>\",\n        chartLeftMargin: \"40\"\n      }\n    }\n  }\n});\n","module.exports = __webpack_public_path__ + \"static/media/TajMahal.50c4e7e7.png\";"],"sourceRoot":""}